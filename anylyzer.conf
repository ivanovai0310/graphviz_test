{
    "FileValidator": {
        "name": "FileValidator",
        "methods": [
            {
                "name": "__init__",
                "calls": [
                    "__init__",
                    "from_json_file",
                    "now",
                    "strftime",
                    "str",
                    "uuid1",
                    "Path",
                    "directory_not_empty",
                    "any",
                    "iterdir",
                    "get_ft_logger",
                    "SynLoggerFT",
                    "get_files",
                    "rglob",
                    "is_dir",
                    "get_shost",
                    "read_json",
                    "get",
                    "get_valid_files",
                    "info",
                    "verify_file",
                    "append",
                    "with_suffix",
                    "glob",
                    "error",
                    "get_limits_list",
                    "list",
                    "map",
                    "verify_file",
                    "LimitManager",
                    "check_limits",
                    "move_file",
                    "move",
                    "as_posix",
                    "create_dir_set_permissions",
                    "move_files_to_error_dir",
                    "move_file"
                ]
            },
            {
                "name": "directory_not_empty",
                "calls": [
                    "directory_not_empty",
                    "get_ft_logger",
                    "get_files",
                    "get_shost",
                    "get_valid_files",
                    "verify_file",
                    "get_limits_list",
                    "verify_file",
                    "move_file",
                    "move_files_to_error_dir",
                    "move_file"
                ]
            },
            {
                "name": "get_ft_logger",
                "calls": [
                    "get_ft_logger",
                    "get_files",
                    "get_shost",
                    "get_valid_files",
                    "verify_file",
                    "get_limits_list",
                    "verify_file",
                    "move_file",
                    "move_files_to_error_dir",
                    "move_file"
                ]
            },
            {
                "name": "get_files",
                "calls": [
                    "get_files",
                    "get_shost",
                    "get_valid_files",
                    "verify_file",
                    "get_limits_list",
                    "verify_file",
                    "move_file",
                    "move_files_to_error_dir",
                    "move_file"
                ]
            },
            {
                "name": "get_shost",
                "calls": [
                    "get_shost",
                    "get_valid_files",
                    "verify_file",
                    "get_limits_list",
                    "verify_file",
                    "move_file",
                    "move_files_to_error_dir",
                    "move_file"
                ]
            },
            {
                "name": "get_valid_files",
                "calls": [
                    "get_valid_files",
                    "verify_file",
                    "get_limits_list",
                    "verify_file",
                    "move_file",
                    "move_files_to_error_dir",
                    "move_file"
                ]
            },
            {
                "name": "get_limits_list",
                "calls": [
                    "get_limits_list",
                    "verify_file",
                    "move_file",
                    "move_files_to_error_dir",
                    "move_file"
                ]
            },
            {
                "name": "verify_file",
                "calls": [
                    "verify_file",
                    "move_file",
                    "move_files_to_error_dir",
                    "move_file"
                ]
            },
            {
                "name": "move_file",
                "calls": [
                    "move_file",
                    "move_files_to_error_dir",
                    "move_file"
                ]
            },
            {
                "name": "move_files_to_error_dir",
                "calls": [
                    "move_files_to_error_dir",
                    "move_file"
                ]
            }
        ],
        "parents": [],
        "calls": [],
        "directory": "/Users/aleksejivanov/PycharmProjects/synonym-soft/itb-synonym-core/src/filetransfer",
        "filename": "check_files.py"
    },
    "FileManagerSource": {
        "name": "FileManagerSource",
        "methods": [
            {
                "name": "__init__",
                "calls": [
                    "__init__",
                    "super",
                    "__init__",
                    "Path",
                    "_move_files_to_target_dir",
                    "create_dir_set_permissions",
                    "move_file",
                    "get_valid_files",
                    "get_files",
                    "get_limits_list",
                    "log_session_check_info",
                    "get_valid_files",
                    "validate_files",
                    "iterdir",
                    "directory_not_empty",
                    "get_ft_logger",
                    "log_session_new_info",
                    "info",
                    "_move_files_to_target_dir",
                    "BadRuleModeError",
                    "get_valid_files",
                    "preparing_files_for_sending",
                    "log_session_submit",
                    "log_session_error_submit",
                    "move_files_to_error_dir",
                    "EventRegistrator",
                    "register_event",
                    "error",
                    "recursive_delete",
                    "unlink",
                    "get_files_name",
                    "preparing_files_for_sending",
                    "create_tar_archive",
                    "create_checksum_file",
                    "open",
                    "extractall",
                    "create_manifest",
                    "get_files_name",
                    "now",
                    "strftime",
                    "gethostname",
                    "write_text",
                    "dumps",
                    "create_tar_archive",
                    "create_manifest",
                    "append",
                    "add",
                    "relative_to",
                    "chown",
                    "create_checksum_file",
                    "sha256",
                    "read",
                    "hexdigest"
                ]
            },
            {
                "name": "_move_files_to_target_dir",
                "calls": [
                    "_move_files_to_target_dir",
                    "get_valid_files",
                    "get_valid_files",
                    "validate_files",
                    "_move_files_to_target_dir",
                    "get_valid_files",
                    "preparing_files_for_sending",
                    "get_files_name",
                    "preparing_files_for_sending",
                    "create_tar_archive",
                    "create_checksum_file",
                    "create_manifest",
                    "get_files_name",
                    "create_tar_archive",
                    "create_manifest",
                    "create_checksum_file"
                ]
            },
            {
                "name": "get_valid_files",
                "calls": [
                    "get_valid_files",
                    "get_valid_files",
                    "validate_files",
                    "_move_files_to_target_dir",
                    "get_valid_files",
                    "preparing_files_for_sending",
                    "get_files_name",
                    "preparing_files_for_sending",
                    "create_tar_archive",
                    "create_checksum_file",
                    "create_manifest",
                    "get_files_name",
                    "create_tar_archive",
                    "create_manifest",
                    "create_checksum_file"
                ]
            },
            {
                "name": "validate_files",
                "calls": [
                    "validate_files",
                    "_move_files_to_target_dir",
                    "get_valid_files",
                    "preparing_files_for_sending",
                    "get_files_name",
                    "preparing_files_for_sending",
                    "create_tar_archive",
                    "create_checksum_file",
                    "create_manifest",
                    "get_files_name",
                    "create_tar_archive",
                    "create_manifest",
                    "create_checksum_file"
                ]
            },
            {
                "name": "get_files_name",
                "calls": [
                    "get_files_name",
                    "preparing_files_for_sending",
                    "create_tar_archive",
                    "create_checksum_file",
                    "create_manifest",
                    "get_files_name",
                    "create_tar_archive",
                    "create_manifest",
                    "create_checksum_file"
                ]
            },
            {
                "name": "preparing_files_for_sending",
                "calls": [
                    "preparing_files_for_sending",
                    "create_tar_archive",
                    "create_checksum_file",
                    "create_manifest",
                    "get_files_name",
                    "create_tar_archive",
                    "create_manifest",
                    "create_checksum_file"
                ]
            },
            {
                "name": "create_manifest",
                "calls": [
                    "create_manifest",
                    "get_files_name",
                    "create_tar_archive",
                    "create_manifest",
                    "create_checksum_file"
                ]
            },
            {
                "name": "create_tar_archive",
                "calls": [
                    "create_tar_archive",
                    "create_manifest",
                    "create_checksum_file"
                ]
            },
            {
                "name": "create_checksum_file",
                "calls": [
                    "create_checksum_file"
                ]
            }
        ],
        "parents": [
            "FileValidator"
        ],
        "calls": [],
        "directory": "/Users/aleksejivanov/PycharmProjects/synonym-soft/itb-synonym-core/src/filetransfer",
        "filename": "check_files.py"
    },
    "FileManagerDestination": {
        "name": "FileManagerDestination",
        "methods": [
            {
                "name": "__init__",
                "calls": [
                    "__init__",
                    "super",
                    "__init__",
                    "get_push",
                    "get",
                    "error",
                    "info",
                    "validate_files",
                    "get_ft_logger",
                    "move_files_to_error_dir",
                    "directory_not_empty",
                    "get_valid_files",
                    "append",
                    "move_valid_files",
                    "recursive_delete",
                    "unlink",
                    "get_valid_files",
                    "get_limits_list",
                    "get_files",
                    "log_session_incoming",
                    "get_shost",
                    "get_valid_files",
                    "log_session_success",
                    "EventRegistrator",
                    "register_event",
                    "move_valid_files",
                    "mkdir",
                    "move_file",
                    "send_session_to_remote_server",
                    "get_client",
                    "get_push_creds",
                    "connect",
                    "is_connected",
                    "ConnectionError",
                    "send_session",
                    "rmtree",
                    "source_check_files",
                    "get_or_create_ft_user_submit_dir",
                    "get_or_create_ft_temp_dir",
                    "FileManagerSource",
                    "validate_files",
                    "destination_check_files",
                    "get_ft_incoming_temp_dir",
                    "get_ft_incoming_dir",
                    "validate_files",
                    "get_push",
                    "send_session_to_remote_server",
                    "main",
                    "ArgumentParser",
                    "add_argument",
                    "parse_args",
                    "get_config_object",
                    "destination_check_files",
                    "source_check_files",
                    "main"
                ]
            },
            {
                "name": "get_push",
                "calls": [
                    "get_push",
                    "validate_files",
                    "get_valid_files",
                    "move_valid_files",
                    "get_valid_files",
                    "get_valid_files",
                    "move_valid_files",
                    "send_session_to_remote_server",
                    "source_check_files",
                    "validate_files",
                    "destination_check_files",
                    "validate_files",
                    "get_push",
                    "send_session_to_remote_server",
                    "main",
                    "destination_check_files",
                    "source_check_files",
                    "main"
                ]
            },
            {
                "name": "validate_files",
                "calls": [
                    "validate_files",
                    "get_valid_files",
                    "move_valid_files",
                    "get_valid_files",
                    "get_valid_files",
                    "move_valid_files",
                    "send_session_to_remote_server",
                    "source_check_files",
                    "validate_files",
                    "destination_check_files",
                    "validate_files",
                    "get_push",
                    "send_session_to_remote_server",
                    "main",
                    "destination_check_files",
                    "source_check_files",
                    "main"
                ]
            },
            {
                "name": "get_valid_files",
                "calls": [
                    "get_valid_files",
                    "get_valid_files",
                    "move_valid_files",
                    "send_session_to_remote_server",
                    "source_check_files",
                    "validate_files",
                    "destination_check_files",
                    "validate_files",
                    "get_push",
                    "send_session_to_remote_server",
                    "main",
                    "destination_check_files",
                    "source_check_files",
                    "main"
                ]
            },
            {
                "name": "move_valid_files",
                "calls": [
                    "move_valid_files",
                    "send_session_to_remote_server",
                    "source_check_files",
                    "validate_files",
                    "destination_check_files",
                    "validate_files",
                    "get_push",
                    "send_session_to_remote_server",
                    "main",
                    "destination_check_files",
                    "source_check_files",
                    "main"
                ]
            },
            {
                "name": "send_session_to_remote_server",
                "calls": [
                    "send_session_to_remote_server",
                    "source_check_files",
                    "validate_files",
                    "destination_check_files",
                    "validate_files",
                    "get_push",
                    "send_session_to_remote_server",
                    "main",
                    "destination_check_files",
                    "source_check_files",
                    "main"
                ]
            },
            {
                "name": "source_check_files",
                "calls": [
                    "source_check_files",
                    "validate_files",
                    "destination_check_files",
                    "validate_files",
                    "get_push",
                    "send_session_to_remote_server",
                    "main",
                    "destination_check_files",
                    "source_check_files",
                    "main"
                ]
            },
            {
                "name": "destination_check_files",
                "calls": [
                    "destination_check_files",
                    "validate_files",
                    "get_push",
                    "send_session_to_remote_server",
                    "main",
                    "destination_check_files",
                    "source_check_files",
                    "main"
                ]
            },
            {
                "name": "main",
                "calls": [
                    "main",
                    "destination_check_files",
                    "source_check_files",
                    "main"
                ]
            }
        ],
        "parents": [
            "FileValidator"
        ],
        "calls": [],
        "directory": "/Users/aleksejivanov/PycharmProjects/synonym-soft/itb-synonym-core/src/filetransfer",
        "filename": "check_files.py"
    },
    "FtSessionNewModel": {
        "name": "FtSessionNewModel",
        "methods": [],
        "parents": [
            "BaseCefModel"
        ],
        "calls": [],
        "directory": "/Users/aleksejivanov/PycharmProjects/synonym-soft/itb-synonym-core/src/filetransfer",
        "filename": "cef.py"
    },
    "FtSessionCheckModel": {
        "name": "FtSessionCheckModel",
        "methods": [],
        "parents": [
            "FtSessionNewModel"
        ],
        "calls": [],
        "directory": "/Users/aleksejivanov/PycharmProjects/synonym-soft/itb-synonym-core/src/filetransfer",
        "filename": "cef.py"
    },
    "FtSessionErrorOutModel": {
        "name": "FtSessionErrorOutModel",
        "methods": [],
        "parents": [
            "BaseCefModel"
        ],
        "calls": [],
        "directory": "/Users/aleksejivanov/PycharmProjects/synonym-soft/itb-synonym-core/src/filetransfer",
        "filename": "cef.py"
    },
    "FtSessionSubmitModel": {
        "name": "FtSessionSubmitModel",
        "methods": [],
        "parents": [
            "BaseCefModel"
        ],
        "calls": [],
        "directory": "/Users/aleksejivanov/PycharmProjects/synonym-soft/itb-synonym-core/src/filetransfer",
        "filename": "cef.py"
    },
    "FtSessionIncomingMode": {
        "name": "FtSessionIncomingMode",
        "methods": [],
        "parents": [
            "FtSessionNewModel"
        ],
        "calls": [],
        "directory": "/Users/aleksejivanov/PycharmProjects/synonym-soft/itb-synonym-core/src/filetransfer",
        "filename": "cef.py"
    },
    "Config": {
        "name": "Config",
        "methods": [],
        "parents": [],
        "calls": [],
        "directory": "/Users/aleksejivanov/PycharmProjects/synonym-soft/itb-synonym-core/src/filetransfer",
        "filename": "cef.py"
    },
    "FtSessionSuccessModel": {
        "name": "FtSessionSuccessModel",
        "methods": [],
        "parents": [
            "BaseCefModel"
        ],
        "calls": [],
        "directory": "/Users/aleksejivanov/PycharmProjects/synonym-soft/itb-synonym-core/src/filetransfer",
        "filename": "cef.py"
    },
    "FtSessionErrorInModel": {
        "name": "FtSessionErrorInModel",
        "methods": [],
        "parents": [
            "FtSessionErrorOutModel"
        ],
        "calls": [],
        "directory": "/Users/aleksejivanov/PycharmProjects/synonym-soft/itb-synonym-core/src/filetransfer",
        "filename": "cef.py"
    },
    "FtChangesModel": {
        "name": "FtChangesModel",
        "methods": [],
        "parents": [
            "BaseCefModel"
        ],
        "calls": [],
        "directory": "/Users/aleksejivanov/PycharmProjects/synonym-soft/itb-synonym-core/src/filetransfer",
        "filename": "cef.py"
    },
    "FtSessionUsermgmt": {
        "name": "FtSessionUsermgmt",
        "methods": [],
        "parents": [
            "BaseCefModel"
        ],
        "calls": [],
        "directory": "/Users/aleksejivanov/PycharmProjects/synonym-soft/itb-synonym-core/src/filetransfer",
        "filename": "cef.py"
    },
    "FtCef": {
        "name": "FtCef",
        "methods": [
            {
                "name": "__init__",
                "calls": [
                    "__init__",
                    "_set_source_connection",
                    "super",
                    "__init__",
                    "log_changes",
                    "_get_base_info_model",
                    "FtChangesModel",
                    "dict",
                    "getuser",
                    "_get_addr",
                    "gethostname",
                    "PermissionError",
                    "_get_cef",
                    "make_cef",
                    "log_session_user_mgmt",
                    "FtSessionUsermgmt",
                    "get_config_object",
                    "get_board_type",
                    "log_session_new_info",
                    "FtSessionNewModel",
                    "get_session",
                    "get_quantity",
                    "get_size",
                    "get_rule",
                    "mkdir",
                    "open",
                    "write",
                    "json",
                    "log_session_check_info",
                    "FtSessionCheckModel",
                    "join",
                    "list",
                    "map",
                    "get_session",
                    "get_quantity",
                    "get_size",
                    "get_rule",
                    "log_session_error_out",
                    "FtSessionErrorOutModel",
                    "generate_event",
                    "log_session_submit",
                    "FtSessionSubmitModel",
                    "log_session_error_submit",
                    "log_session_incoming",
                    "FtSessionIncomingMode",
                    "get_quantity",
                    "get_size",
                    "log_session_success",
                    "FtSessionSuccessModel",
                    "get_quantity",
                    "get_size",
                    "log_session_error_in",
                    "FtSessionErrorInModel",
                    "get_quantity",
                    "len",
                    "get_size",
                    "stat",
                    "get_rule",
                    "get_session",
                    "get_source_ip"
                ]
            },
            {
                "name": "log_changes",
                "calls": [
                    "log_changes",
                    "log_session_user_mgmt",
                    "log_session_new_info",
                    "get_session",
                    "get_quantity",
                    "get_size",
                    "get_rule",
                    "log_session_check_info",
                    "get_session",
                    "get_quantity",
                    "get_size",
                    "get_rule",
                    "log_session_error_out",
                    "log_session_submit",
                    "log_session_error_submit",
                    "log_session_incoming",
                    "get_quantity",
                    "get_size",
                    "log_session_success",
                    "get_quantity",
                    "get_size",
                    "log_session_error_in",
                    "get_quantity",
                    "get_size",
                    "get_rule",
                    "get_session",
                    "get_source_ip"
                ]
            },
            {
                "name": "log_session_user_mgmt",
                "calls": [
                    "log_session_user_mgmt",
                    "log_session_new_info",
                    "get_session",
                    "get_quantity",
                    "get_size",
                    "get_rule",
                    "log_session_check_info",
                    "get_session",
                    "get_quantity",
                    "get_size",
                    "get_rule",
                    "log_session_error_out",
                    "log_session_submit",
                    "log_session_error_submit",
                    "log_session_incoming",
                    "get_quantity",
                    "get_size",
                    "log_session_success",
                    "get_quantity",
                    "get_size",
                    "log_session_error_in",
                    "get_quantity",
                    "get_size",
                    "get_rule",
                    "get_session",
                    "get_source_ip"
                ]
            },
            {
                "name": "log_session_new_info",
                "calls": [
                    "log_session_new_info",
                    "get_session",
                    "get_quantity",
                    "get_size",
                    "get_rule",
                    "log_session_check_info",
                    "get_session",
                    "get_quantity",
                    "get_size",
                    "get_rule",
                    "log_session_error_out",
                    "log_session_submit",
                    "log_session_error_submit",
                    "log_session_incoming",
                    "get_quantity",
                    "get_size",
                    "log_session_success",
                    "get_quantity",
                    "get_size",
                    "log_session_error_in",
                    "get_quantity",
                    "get_size",
                    "get_rule",
                    "get_session",
                    "get_source_ip"
                ]
            },
            {
                "name": "log_session_check_info",
                "calls": [
                    "log_session_check_info",
                    "get_session",
                    "get_quantity",
                    "get_size",
                    "get_rule",
                    "log_session_error_out",
                    "log_session_submit",
                    "log_session_error_submit",
                    "log_session_incoming",
                    "get_quantity",
                    "get_size",
                    "log_session_success",
                    "get_quantity",
                    "get_size",
                    "log_session_error_in",
                    "get_quantity",
                    "get_size",
                    "get_rule",
                    "get_session",
                    "get_source_ip"
                ]
            },
            {
                "name": "log_session_error_out",
                "calls": [
                    "log_session_error_out",
                    "log_session_submit",
                    "log_session_error_submit",
                    "log_session_incoming",
                    "get_quantity",
                    "get_size",
                    "log_session_success",
                    "get_quantity",
                    "get_size",
                    "log_session_error_in",
                    "get_quantity",
                    "get_size",
                    "get_rule",
                    "get_session",
                    "get_source_ip"
                ]
            },
            {
                "name": "log_session_submit",
                "calls": [
                    "log_session_submit",
                    "log_session_error_submit",
                    "log_session_incoming",
                    "get_quantity",
                    "get_size",
                    "log_session_success",
                    "get_quantity",
                    "get_size",
                    "log_session_error_in",
                    "get_quantity",
                    "get_size",
                    "get_rule",
                    "get_session",
                    "get_source_ip"
                ]
            },
            {
                "name": "log_session_error_submit",
                "calls": [
                    "log_session_error_submit",
                    "log_session_incoming",
                    "get_quantity",
                    "get_size",
                    "log_session_success",
                    "get_quantity",
                    "get_size",
                    "log_session_error_in",
                    "get_quantity",
                    "get_size",
                    "get_rule",
                    "get_session",
                    "get_source_ip"
                ]
            },
            {
                "name": "log_session_incoming",
                "calls": [
                    "log_session_incoming",
                    "get_quantity",
                    "get_size",
                    "log_session_success",
                    "get_quantity",
                    "get_size",
                    "log_session_error_in",
                    "get_quantity",
                    "get_size",
                    "get_rule",
                    "get_session",
                    "get_source_ip"
                ]
            },
            {
                "name": "log_session_success",
                "calls": [
                    "log_session_success",
                    "get_quantity",
                    "get_size",
                    "log_session_error_in",
                    "get_quantity",
                    "get_size",
                    "get_rule",
                    "get_session",
                    "get_source_ip"
                ]
            },
            {
                "name": "log_session_error_in",
                "calls": [
                    "log_session_error_in",
                    "get_quantity",
                    "get_size",
                    "get_rule",
                    "get_session",
                    "get_source_ip"
                ]
            },
            {
                "name": "get_quantity",
                "calls": [
                    "get_quantity",
                    "get_size",
                    "get_rule",
                    "get_session",
                    "get_source_ip"
                ]
            },
            {
                "name": "get_size",
                "calls": [
                    "get_size",
                    "get_rule",
                    "get_session",
                    "get_source_ip"
                ]
            },
            {
                "name": "get_rule",
                "calls": [
                    "get_rule",
                    "get_session",
                    "get_source_ip"
                ]
            },
            {
                "name": "get_session",
                "calls": [
                    "get_session",
                    "get_source_ip"
                ]
            },
            {
                "name": "get_source_ip",
                "calls": [
                    "get_source_ip"
                ]
            }
        ],
        "parents": [
            "CefBase",
            "ConnectionMixin"
        ],
        "calls": [],
        "directory": "/Users/aleksejivanov/PycharmProjects/synonym-soft/itb-synonym-core/src/filetransfer",
        "filename": "cef.py"
    },
    "SynFiletransfer": {
        "name": "SynFiletransfer",
        "methods": [
            {
                "name": "__init__",
                "calls": [
                    "__init__",
                    "get_config_object",
                    "from_json_file",
                    "exists",
                    "error",
                    "FileNotFoundError",
                    "items",
                    "get_user_to_delete",
                    "iterdir",
                    "is_dir",
                    "FiletransferDirsFirstLevel",
                    "ShellUsers",
                    "append",
                    "get_rule_to_delete",
                    "rglob",
                    "get_running_pushes",
                    "set",
                    "values",
                    "get",
                    "add",
                    "create_user_dirs_first_level",
                    "create_dir_set_permissions",
                    "FiletransferDirs",
                    "add_user_to_os",
                    "getpwnam",
                    "get_useradd_cmd",
                    "run",
                    "info",
                    "Popen",
                    "communicate",
                    "encode",
                    "mount_incoming",
                    "is_mount_target_cmd",
                    "makedirs",
                    "get_mount_cmd",
                    "umount_incoming",
                    "get_umount_cmd",
                    "rmtree",
                    "delete_user",
                    "get_user_del_cmd",
                    "delete_folder",
                    "delete_folder",
                    "delete_users",
                    "delete_user",
                    "create_users",
                    "keys",
                    "add_user_to_os",
                    "create_user_dirs_first_level",
                    "delete_folder",
                    "umount_incoming",
                    "delete_rules_dirs",
                    "len",
                    "Path",
                    "map",
                    "delete_folder",
                    "delete_user_rules_dirs",
                    "get_user_rules_to_delete",
                    "umount_incoming",
                    "delete_folder",
                    "get_user_rules_to_delete",
                    "filter",
                    "create_rule_dirs",
                    "mount_incoming",
                    "mount_incoming_on_start",
                    "mount_on_start",
                    "mount_incoming_on_start",
                    "manage_pushes",
                    "get_running_pushes",
                    "get_running_pushes",
                    "PushManager",
                    "list",
                    "delete_push_services",
                    "create_push_services",
                    "add_ssh_pubkeys",
                    "get_pubkeys_to_commit_dir",
                    "get_pubkeys_not_existed_users_dir",
                    "chain",
                    "split",
                    "ShellFtNamesModel",
                    "get_user_ssh_file",
                    "SSHPubKeyManager",
                    "update_keys",
                    "move",
                    "chown",
                    "chmod",
                    "clear_garbage",
                    "main",
                    "SynTracer",
                    "start_trace",
                    "get_user_to_delete",
                    "get_rule_to_delete",
                    "delete_users",
                    "create_users",
                    "delete_rules_dirs",
                    "delete_user_rules_dirs",
                    "create_rule_dirs",
                    "manage_pushes",
                    "add_ssh_pubkeys",
                    "stop_trace",
                    "on_start_system",
                    "mount_on_start",
                    "exit",
                    "main"
                ]
            },
            {
                "name": "get_user_to_delete",
                "calls": [
                    "get_user_to_delete",
                    "get_rule_to_delete",
                    "get_running_pushes",
                    "create_user_dirs_first_level",
                    "add_user_to_os",
                    "mount_incoming",
                    "umount_incoming",
                    "delete_user",
                    "delete_folder",
                    "delete_folder",
                    "delete_users",
                    "delete_user",
                    "create_users",
                    "add_user_to_os",
                    "create_user_dirs_first_level",
                    "delete_folder",
                    "umount_incoming",
                    "delete_rules_dirs",
                    "delete_folder",
                    "delete_user_rules_dirs",
                    "get_user_rules_to_delete",
                    "umount_incoming",
                    "delete_folder",
                    "get_user_rules_to_delete",
                    "create_rule_dirs",
                    "mount_incoming",
                    "mount_incoming_on_start",
                    "mount_on_start",
                    "mount_incoming_on_start",
                    "manage_pushes",
                    "get_running_pushes",
                    "get_running_pushes",
                    "add_ssh_pubkeys",
                    "clear_garbage",
                    "main",
                    "get_user_to_delete",
                    "get_rule_to_delete",
                    "delete_users",
                    "create_users",
                    "delete_rules_dirs",
                    "delete_user_rules_dirs",
                    "create_rule_dirs",
                    "manage_pushes",
                    "add_ssh_pubkeys",
                    "on_start_system",
                    "mount_on_start",
                    "main"
                ]
            },
            {
                "name": "get_rule_to_delete",
                "calls": [
                    "get_rule_to_delete",
                    "get_running_pushes",
                    "create_user_dirs_first_level",
                    "add_user_to_os",
                    "mount_incoming",
                    "umount_incoming",
                    "delete_user",
                    "delete_folder",
                    "delete_folder",
                    "delete_users",
                    "delete_user",
                    "create_users",
                    "add_user_to_os",
                    "create_user_dirs_first_level",
                    "delete_folder",
                    "umount_incoming",
                    "delete_rules_dirs",
                    "delete_folder",
                    "delete_user_rules_dirs",
                    "get_user_rules_to_delete",
                    "umount_incoming",
                    "delete_folder",
                    "get_user_rules_to_delete",
                    "create_rule_dirs",
                    "mount_incoming",
                    "mount_incoming_on_start",
                    "mount_on_start",
                    "mount_incoming_on_start",
                    "manage_pushes",
                    "get_running_pushes",
                    "get_running_pushes",
                    "add_ssh_pubkeys",
                    "clear_garbage",
                    "main",
                    "get_user_to_delete",
                    "get_rule_to_delete",
                    "delete_users",
                    "create_users",
                    "delete_rules_dirs",
                    "delete_user_rules_dirs",
                    "create_rule_dirs",
                    "manage_pushes",
                    "add_ssh_pubkeys",
                    "on_start_system",
                    "mount_on_start",
                    "main"
                ]
            },
            {
                "name": "get_running_pushes",
                "calls": [
                    "get_running_pushes",
                    "create_user_dirs_first_level",
                    "add_user_to_os",
                    "mount_incoming",
                    "umount_incoming",
                    "delete_user",
                    "delete_folder",
                    "delete_folder",
                    "delete_users",
                    "delete_user",
                    "create_users",
                    "add_user_to_os",
                    "create_user_dirs_first_level",
                    "delete_folder",
                    "umount_incoming",
                    "delete_rules_dirs",
                    "delete_folder",
                    "delete_user_rules_dirs",
                    "get_user_rules_to_delete",
                    "umount_incoming",
                    "delete_folder",
                    "get_user_rules_to_delete",
                    "create_rule_dirs",
                    "mount_incoming",
                    "mount_incoming_on_start",
                    "mount_on_start",
                    "mount_incoming_on_start",
                    "manage_pushes",
                    "get_running_pushes",
                    "get_running_pushes",
                    "add_ssh_pubkeys",
                    "clear_garbage",
                    "main",
                    "get_user_to_delete",
                    "get_rule_to_delete",
                    "delete_users",
                    "create_users",
                    "delete_rules_dirs",
                    "delete_user_rules_dirs",
                    "create_rule_dirs",
                    "manage_pushes",
                    "add_ssh_pubkeys",
                    "on_start_system",
                    "mount_on_start",
                    "main"
                ]
            },
            {
                "name": "create_user_dirs_first_level",
                "calls": [
                    "create_user_dirs_first_level",
                    "add_user_to_os",
                    "mount_incoming",
                    "umount_incoming",
                    "delete_user",
                    "delete_folder",
                    "delete_folder",
                    "delete_users",
                    "delete_user",
                    "create_users",
                    "add_user_to_os",
                    "create_user_dirs_first_level",
                    "delete_folder",
                    "umount_incoming",
                    "delete_rules_dirs",
                    "delete_folder",
                    "delete_user_rules_dirs",
                    "get_user_rules_to_delete",
                    "umount_incoming",
                    "delete_folder",
                    "get_user_rules_to_delete",
                    "create_rule_dirs",
                    "mount_incoming",
                    "mount_incoming_on_start",
                    "mount_on_start",
                    "mount_incoming_on_start",
                    "manage_pushes",
                    "get_running_pushes",
                    "get_running_pushes",
                    "add_ssh_pubkeys",
                    "clear_garbage",
                    "main",
                    "get_user_to_delete",
                    "get_rule_to_delete",
                    "delete_users",
                    "create_users",
                    "delete_rules_dirs",
                    "delete_user_rules_dirs",
                    "create_rule_dirs",
                    "manage_pushes",
                    "add_ssh_pubkeys",
                    "on_start_system",
                    "mount_on_start",
                    "main"
                ]
            },
            {
                "name": "add_user_to_os",
                "calls": [
                    "add_user_to_os",
                    "mount_incoming",
                    "umount_incoming",
                    "delete_user",
                    "delete_folder",
                    "delete_folder",
                    "delete_users",
                    "delete_user",
                    "create_users",
                    "add_user_to_os",
                    "create_user_dirs_first_level",
                    "delete_folder",
                    "umount_incoming",
                    "delete_rules_dirs",
                    "delete_folder",
                    "delete_user_rules_dirs",
                    "get_user_rules_to_delete",
                    "umount_incoming",
                    "delete_folder",
                    "get_user_rules_to_delete",
                    "create_rule_dirs",
                    "mount_incoming",
                    "mount_incoming_on_start",
                    "mount_on_start",
                    "mount_incoming_on_start",
                    "manage_pushes",
                    "get_running_pushes",
                    "get_running_pushes",
                    "add_ssh_pubkeys",
                    "clear_garbage",
                    "main",
                    "get_user_to_delete",
                    "get_rule_to_delete",
                    "delete_users",
                    "create_users",
                    "delete_rules_dirs",
                    "delete_user_rules_dirs",
                    "create_rule_dirs",
                    "manage_pushes",
                    "add_ssh_pubkeys",
                    "on_start_system",
                    "mount_on_start",
                    "main"
                ]
            },
            {
                "name": "mount_incoming",
                "calls": [
                    "mount_incoming",
                    "umount_incoming",
                    "delete_user",
                    "delete_folder",
                    "delete_folder",
                    "delete_users",
                    "delete_user",
                    "create_users",
                    "add_user_to_os",
                    "create_user_dirs_first_level",
                    "delete_folder",
                    "umount_incoming",
                    "delete_rules_dirs",
                    "delete_folder",
                    "delete_user_rules_dirs",
                    "get_user_rules_to_delete",
                    "umount_incoming",
                    "delete_folder",
                    "get_user_rules_to_delete",
                    "create_rule_dirs",
                    "mount_incoming",
                    "mount_incoming_on_start",
                    "mount_on_start",
                    "mount_incoming_on_start",
                    "manage_pushes",
                    "get_running_pushes",
                    "get_running_pushes",
                    "add_ssh_pubkeys",
                    "clear_garbage",
                    "main",
                    "get_user_to_delete",
                    "get_rule_to_delete",
                    "delete_users",
                    "create_users",
                    "delete_rules_dirs",
                    "delete_user_rules_dirs",
                    "create_rule_dirs",
                    "manage_pushes",
                    "add_ssh_pubkeys",
                    "on_start_system",
                    "mount_on_start",
                    "main"
                ]
            },
            {
                "name": "umount_incoming",
                "calls": [
                    "umount_incoming",
                    "delete_user",
                    "delete_folder",
                    "delete_folder",
                    "delete_users",
                    "delete_user",
                    "create_users",
                    "add_user_to_os",
                    "create_user_dirs_first_level",
                    "delete_folder",
                    "umount_incoming",
                    "delete_rules_dirs",
                    "delete_folder",
                    "delete_user_rules_dirs",
                    "get_user_rules_to_delete",
                    "umount_incoming",
                    "delete_folder",
                    "get_user_rules_to_delete",
                    "create_rule_dirs",
                    "mount_incoming",
                    "mount_incoming_on_start",
                    "mount_on_start",
                    "mount_incoming_on_start",
                    "manage_pushes",
                    "get_running_pushes",
                    "get_running_pushes",
                    "add_ssh_pubkeys",
                    "clear_garbage",
                    "main",
                    "get_user_to_delete",
                    "get_rule_to_delete",
                    "delete_users",
                    "create_users",
                    "delete_rules_dirs",
                    "delete_user_rules_dirs",
                    "create_rule_dirs",
                    "manage_pushes",
                    "add_ssh_pubkeys",
                    "on_start_system",
                    "mount_on_start",
                    "main"
                ]
            },
            {
                "name": "delete_user",
                "calls": [
                    "delete_user",
                    "delete_folder",
                    "delete_folder",
                    "delete_users",
                    "delete_user",
                    "create_users",
                    "add_user_to_os",
                    "create_user_dirs_first_level",
                    "delete_folder",
                    "umount_incoming",
                    "delete_rules_dirs",
                    "delete_folder",
                    "delete_user_rules_dirs",
                    "get_user_rules_to_delete",
                    "umount_incoming",
                    "delete_folder",
                    "get_user_rules_to_delete",
                    "create_rule_dirs",
                    "mount_incoming",
                    "mount_incoming_on_start",
                    "mount_on_start",
                    "mount_incoming_on_start",
                    "manage_pushes",
                    "get_running_pushes",
                    "get_running_pushes",
                    "add_ssh_pubkeys",
                    "clear_garbage",
                    "main",
                    "get_user_to_delete",
                    "get_rule_to_delete",
                    "delete_users",
                    "create_users",
                    "delete_rules_dirs",
                    "delete_user_rules_dirs",
                    "create_rule_dirs",
                    "manage_pushes",
                    "add_ssh_pubkeys",
                    "on_start_system",
                    "mount_on_start",
                    "main"
                ]
            },
            {
                "name": "delete_users",
                "calls": [
                    "delete_users",
                    "delete_user",
                    "create_users",
                    "add_user_to_os",
                    "create_user_dirs_first_level",
                    "delete_folder",
                    "umount_incoming",
                    "delete_rules_dirs",
                    "delete_folder",
                    "delete_user_rules_dirs",
                    "get_user_rules_to_delete",
                    "umount_incoming",
                    "delete_folder",
                    "get_user_rules_to_delete",
                    "create_rule_dirs",
                    "mount_incoming",
                    "mount_incoming_on_start",
                    "mount_on_start",
                    "mount_incoming_on_start",
                    "manage_pushes",
                    "get_running_pushes",
                    "get_running_pushes",
                    "add_ssh_pubkeys",
                    "clear_garbage",
                    "main",
                    "get_user_to_delete",
                    "get_rule_to_delete",
                    "delete_users",
                    "create_users",
                    "delete_rules_dirs",
                    "delete_user_rules_dirs",
                    "create_rule_dirs",
                    "manage_pushes",
                    "add_ssh_pubkeys",
                    "on_start_system",
                    "mount_on_start",
                    "main"
                ]
            },
            {
                "name": "create_users",
                "calls": [
                    "create_users",
                    "add_user_to_os",
                    "create_user_dirs_first_level",
                    "delete_folder",
                    "umount_incoming",
                    "delete_rules_dirs",
                    "delete_folder",
                    "delete_user_rules_dirs",
                    "get_user_rules_to_delete",
                    "umount_incoming",
                    "delete_folder",
                    "get_user_rules_to_delete",
                    "create_rule_dirs",
                    "mount_incoming",
                    "mount_incoming_on_start",
                    "mount_on_start",
                    "mount_incoming_on_start",
                    "manage_pushes",
                    "get_running_pushes",
                    "get_running_pushes",
                    "add_ssh_pubkeys",
                    "clear_garbage",
                    "main",
                    "get_user_to_delete",
                    "get_rule_to_delete",
                    "delete_users",
                    "create_users",
                    "delete_rules_dirs",
                    "delete_user_rules_dirs",
                    "create_rule_dirs",
                    "manage_pushes",
                    "add_ssh_pubkeys",
                    "on_start_system",
                    "mount_on_start",
                    "main"
                ]
            },
            {
                "name": "delete_folder",
                "calls": [
                    "delete_folder",
                    "umount_incoming",
                    "delete_rules_dirs",
                    "delete_folder",
                    "delete_user_rules_dirs",
                    "get_user_rules_to_delete",
                    "umount_incoming",
                    "delete_folder",
                    "get_user_rules_to_delete",
                    "create_rule_dirs",
                    "mount_incoming",
                    "mount_incoming_on_start",
                    "mount_on_start",
                    "mount_incoming_on_start",
                    "manage_pushes",
                    "get_running_pushes",
                    "get_running_pushes",
                    "add_ssh_pubkeys",
                    "clear_garbage",
                    "main",
                    "get_user_to_delete",
                    "get_rule_to_delete",
                    "delete_users",
                    "create_users",
                    "delete_rules_dirs",
                    "delete_user_rules_dirs",
                    "create_rule_dirs",
                    "manage_pushes",
                    "add_ssh_pubkeys",
                    "on_start_system",
                    "mount_on_start",
                    "main"
                ]
            },
            {
                "name": "delete_rules_dirs",
                "calls": [
                    "delete_rules_dirs",
                    "delete_folder",
                    "delete_user_rules_dirs",
                    "get_user_rules_to_delete",
                    "umount_incoming",
                    "delete_folder",
                    "get_user_rules_to_delete",
                    "create_rule_dirs",
                    "mount_incoming",
                    "mount_incoming_on_start",
                    "mount_on_start",
                    "mount_incoming_on_start",
                    "manage_pushes",
                    "get_running_pushes",
                    "get_running_pushes",
                    "add_ssh_pubkeys",
                    "clear_garbage",
                    "main",
                    "get_user_to_delete",
                    "get_rule_to_delete",
                    "delete_users",
                    "create_users",
                    "delete_rules_dirs",
                    "delete_user_rules_dirs",
                    "create_rule_dirs",
                    "manage_pushes",
                    "add_ssh_pubkeys",
                    "on_start_system",
                    "mount_on_start",
                    "main"
                ]
            },
            {
                "name": "delete_user_rules_dirs",
                "calls": [
                    "delete_user_rules_dirs",
                    "get_user_rules_to_delete",
                    "umount_incoming",
                    "delete_folder",
                    "get_user_rules_to_delete",
                    "create_rule_dirs",
                    "mount_incoming",
                    "mount_incoming_on_start",
                    "mount_on_start",
                    "mount_incoming_on_start",
                    "manage_pushes",
                    "get_running_pushes",
                    "get_running_pushes",
                    "add_ssh_pubkeys",
                    "clear_garbage",
                    "main",
                    "get_user_to_delete",
                    "get_rule_to_delete",
                    "delete_users",
                    "create_users",
                    "delete_rules_dirs",
                    "delete_user_rules_dirs",
                    "create_rule_dirs",
                    "manage_pushes",
                    "add_ssh_pubkeys",
                    "on_start_system",
                    "mount_on_start",
                    "main"
                ]
            },
            {
                "name": "get_user_rules_to_delete",
                "calls": [
                    "get_user_rules_to_delete",
                    "create_rule_dirs",
                    "mount_incoming",
                    "mount_incoming_on_start",
                    "mount_on_start",
                    "mount_incoming_on_start",
                    "manage_pushes",
                    "get_running_pushes",
                    "get_running_pushes",
                    "add_ssh_pubkeys",
                    "clear_garbage",
                    "main",
                    "get_user_to_delete",
                    "get_rule_to_delete",
                    "delete_users",
                    "create_users",
                    "delete_rules_dirs",
                    "delete_user_rules_dirs",
                    "create_rule_dirs",
                    "manage_pushes",
                    "add_ssh_pubkeys",
                    "on_start_system",
                    "mount_on_start",
                    "main"
                ]
            },
            {
                "name": "create_rule_dirs",
                "calls": [
                    "create_rule_dirs",
                    "mount_incoming",
                    "mount_incoming_on_start",
                    "mount_on_start",
                    "mount_incoming_on_start",
                    "manage_pushes",
                    "get_running_pushes",
                    "get_running_pushes",
                    "add_ssh_pubkeys",
                    "clear_garbage",
                    "main",
                    "get_user_to_delete",
                    "get_rule_to_delete",
                    "delete_users",
                    "create_users",
                    "delete_rules_dirs",
                    "delete_user_rules_dirs",
                    "create_rule_dirs",
                    "manage_pushes",
                    "add_ssh_pubkeys",
                    "on_start_system",
                    "mount_on_start",
                    "main"
                ]
            },
            {
                "name": "mount_incoming_on_start",
                "calls": [
                    "mount_incoming_on_start",
                    "mount_on_start",
                    "mount_incoming_on_start",
                    "manage_pushes",
                    "get_running_pushes",
                    "get_running_pushes",
                    "add_ssh_pubkeys",
                    "clear_garbage",
                    "main",
                    "get_user_to_delete",
                    "get_rule_to_delete",
                    "delete_users",
                    "create_users",
                    "delete_rules_dirs",
                    "delete_user_rules_dirs",
                    "create_rule_dirs",
                    "manage_pushes",
                    "add_ssh_pubkeys",
                    "on_start_system",
                    "mount_on_start",
                    "main"
                ]
            },
            {
                "name": "mount_on_start",
                "calls": [
                    "mount_on_start",
                    "mount_incoming_on_start",
                    "manage_pushes",
                    "get_running_pushes",
                    "get_running_pushes",
                    "add_ssh_pubkeys",
                    "clear_garbage",
                    "main",
                    "get_user_to_delete",
                    "get_rule_to_delete",
                    "delete_users",
                    "create_users",
                    "delete_rules_dirs",
                    "delete_user_rules_dirs",
                    "create_rule_dirs",
                    "manage_pushes",
                    "add_ssh_pubkeys",
                    "on_start_system",
                    "mount_on_start",
                    "main"
                ]
            },
            {
                "name": "manage_pushes",
                "calls": [
                    "manage_pushes",
                    "get_running_pushes",
                    "get_running_pushes",
                    "add_ssh_pubkeys",
                    "clear_garbage",
                    "main",
                    "get_user_to_delete",
                    "get_rule_to_delete",
                    "delete_users",
                    "create_users",
                    "delete_rules_dirs",
                    "delete_user_rules_dirs",
                    "create_rule_dirs",
                    "manage_pushes",
                    "add_ssh_pubkeys",
                    "on_start_system",
                    "mount_on_start",
                    "main"
                ]
            },
            {
                "name": "add_ssh_pubkeys",
                "calls": [
                    "add_ssh_pubkeys",
                    "clear_garbage",
                    "main",
                    "get_user_to_delete",
                    "get_rule_to_delete",
                    "delete_users",
                    "create_users",
                    "delete_rules_dirs",
                    "delete_user_rules_dirs",
                    "create_rule_dirs",
                    "manage_pushes",
                    "add_ssh_pubkeys",
                    "on_start_system",
                    "mount_on_start",
                    "main"
                ]
            },
            {
                "name": "clear_garbage",
                "calls": [
                    "clear_garbage",
                    "main",
                    "get_user_to_delete",
                    "get_rule_to_delete",
                    "delete_users",
                    "create_users",
                    "delete_rules_dirs",
                    "delete_user_rules_dirs",
                    "create_rule_dirs",
                    "manage_pushes",
                    "add_ssh_pubkeys",
                    "on_start_system",
                    "mount_on_start",
                    "main"
                ]
            },
            {
                "name": "main",
                "calls": [
                    "main",
                    "get_user_to_delete",
                    "get_rule_to_delete",
                    "delete_users",
                    "create_users",
                    "delete_rules_dirs",
                    "delete_user_rules_dirs",
                    "create_rule_dirs",
                    "manage_pushes",
                    "add_ssh_pubkeys",
                    "on_start_system",
                    "mount_on_start",
                    "main"
                ]
            },
            {
                "name": "on_start_system",
                "calls": [
                    "on_start_system",
                    "mount_on_start",
                    "main"
                ]
            }
        ],
        "parents": [],
        "calls": [],
        "directory": "/Users/aleksejivanov/PycharmProjects/synonym-soft/itb-synonym-core/src/filetransfer",
        "filename": "syn_filetransfer.py"
    },
    "SynCheckFilesCore": {
        "name": "SynCheckFilesCore",
        "methods": [
            {
                "name": "__init__",
                "calls": [
                    "__init__",
                    "get_config_object",
                    "from_private_key_file",
                    "get_sftp_connect",
                    "Transport",
                    "get_wing_interlink_ip",
                    "connect",
                    "from_transport",
                    "get_ssh_connect",
                    "SSHClient",
                    "set_missing_host_key_policy",
                    "AutoAddPolicy",
                    "get_dst",
                    "ValueError",
                    "get_sftp_connections",
                    "get_sftp_connect",
                    "get_dst",
                    "get_sftp_connect",
                    "get_ssh_connection",
                    "get_dst",
                    "get_ssh_connect",
                    "get_file_checksum",
                    "open",
                    "read",
                    "sha256",
                    "hexdigest",
                    "get_checksum_from_file",
                    "strip",
                    "compare_checksums",
                    "get_file_checksum",
                    "get_checksum_from_file",
                    "cleaning",
                    "info",
                    "remove",
                    "str",
                    "create_session_path",
                    "create_rule_dir",
                    "create_session_dir",
                    "create_session_dir",
                    "mkdir",
                    "error",
                    "create_rule_dir",
                    "untar_remote",
                    "rv_run_command",
                    "decode",
                    "copy_files_if_valid",
                    "handle_error",
                    "Path",
                    "put",
                    "do_file_transfer",
                    "get",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "exists",
                    "handle_error",
                    "compare_checksums",
                    "handle_error",
                    "handle_error",
                    "create_session_path",
                    "untar_remote",
                    "copy_files_if_valid",
                    "cleaning",
                    "collect_files",
                    "listdir",
                    "endswith",
                    "split",
                    "do_file_transfer",
                    "start_collect",
                    "get_sftp_connections",
                    "get_ssh_connection",
                    "collect_files",
                    "close",
                    "main",
                    "start_collect",
                    "exit",
                    "main"
                ]
            },
            {
                "name": "get_sftp_connect",
                "calls": [
                    "get_sftp_connect",
                    "get_ssh_connect",
                    "get_dst",
                    "get_sftp_connections",
                    "get_sftp_connect",
                    "get_dst",
                    "get_sftp_connect",
                    "get_ssh_connection",
                    "get_dst",
                    "get_ssh_connect",
                    "get_file_checksum",
                    "get_checksum_from_file",
                    "compare_checksums",
                    "get_file_checksum",
                    "get_checksum_from_file",
                    "cleaning",
                    "create_session_path",
                    "create_rule_dir",
                    "create_session_dir",
                    "create_session_dir",
                    "create_rule_dir",
                    "untar_remote",
                    "copy_files_if_valid",
                    "handle_error",
                    "do_file_transfer",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "compare_checksums",
                    "handle_error",
                    "handle_error",
                    "create_session_path",
                    "untar_remote",
                    "copy_files_if_valid",
                    "cleaning",
                    "collect_files",
                    "do_file_transfer",
                    "start_collect",
                    "get_sftp_connections",
                    "get_ssh_connection",
                    "collect_files",
                    "main",
                    "start_collect",
                    "main"
                ]
            },
            {
                "name": "get_ssh_connect",
                "calls": [
                    "get_ssh_connect",
                    "get_dst",
                    "get_sftp_connections",
                    "get_sftp_connect",
                    "get_dst",
                    "get_sftp_connect",
                    "get_ssh_connection",
                    "get_dst",
                    "get_ssh_connect",
                    "get_file_checksum",
                    "get_checksum_from_file",
                    "compare_checksums",
                    "get_file_checksum",
                    "get_checksum_from_file",
                    "cleaning",
                    "create_session_path",
                    "create_rule_dir",
                    "create_session_dir",
                    "create_session_dir",
                    "create_rule_dir",
                    "untar_remote",
                    "copy_files_if_valid",
                    "handle_error",
                    "do_file_transfer",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "compare_checksums",
                    "handle_error",
                    "handle_error",
                    "create_session_path",
                    "untar_remote",
                    "copy_files_if_valid",
                    "cleaning",
                    "collect_files",
                    "do_file_transfer",
                    "start_collect",
                    "get_sftp_connections",
                    "get_ssh_connection",
                    "collect_files",
                    "main",
                    "start_collect",
                    "main"
                ]
            },
            {
                "name": "get_dst",
                "calls": [
                    "get_dst",
                    "get_sftp_connections",
                    "get_sftp_connect",
                    "get_dst",
                    "get_sftp_connect",
                    "get_ssh_connection",
                    "get_dst",
                    "get_ssh_connect",
                    "get_file_checksum",
                    "get_checksum_from_file",
                    "compare_checksums",
                    "get_file_checksum",
                    "get_checksum_from_file",
                    "cleaning",
                    "create_session_path",
                    "create_rule_dir",
                    "create_session_dir",
                    "create_session_dir",
                    "create_rule_dir",
                    "untar_remote",
                    "copy_files_if_valid",
                    "handle_error",
                    "do_file_transfer",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "compare_checksums",
                    "handle_error",
                    "handle_error",
                    "create_session_path",
                    "untar_remote",
                    "copy_files_if_valid",
                    "cleaning",
                    "collect_files",
                    "do_file_transfer",
                    "start_collect",
                    "get_sftp_connections",
                    "get_ssh_connection",
                    "collect_files",
                    "main",
                    "start_collect",
                    "main"
                ]
            },
            {
                "name": "get_sftp_connections",
                "calls": [
                    "get_sftp_connections",
                    "get_sftp_connect",
                    "get_dst",
                    "get_sftp_connect",
                    "get_ssh_connection",
                    "get_dst",
                    "get_ssh_connect",
                    "get_file_checksum",
                    "get_checksum_from_file",
                    "compare_checksums",
                    "get_file_checksum",
                    "get_checksum_from_file",
                    "cleaning",
                    "create_session_path",
                    "create_rule_dir",
                    "create_session_dir",
                    "create_session_dir",
                    "create_rule_dir",
                    "untar_remote",
                    "copy_files_if_valid",
                    "handle_error",
                    "do_file_transfer",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "compare_checksums",
                    "handle_error",
                    "handle_error",
                    "create_session_path",
                    "untar_remote",
                    "copy_files_if_valid",
                    "cleaning",
                    "collect_files",
                    "do_file_transfer",
                    "start_collect",
                    "get_sftp_connections",
                    "get_ssh_connection",
                    "collect_files",
                    "main",
                    "start_collect",
                    "main"
                ]
            },
            {
                "name": "get_ssh_connection",
                "calls": [
                    "get_ssh_connection",
                    "get_dst",
                    "get_ssh_connect",
                    "get_file_checksum",
                    "get_checksum_from_file",
                    "compare_checksums",
                    "get_file_checksum",
                    "get_checksum_from_file",
                    "cleaning",
                    "create_session_path",
                    "create_rule_dir",
                    "create_session_dir",
                    "create_session_dir",
                    "create_rule_dir",
                    "untar_remote",
                    "copy_files_if_valid",
                    "handle_error",
                    "do_file_transfer",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "compare_checksums",
                    "handle_error",
                    "handle_error",
                    "create_session_path",
                    "untar_remote",
                    "copy_files_if_valid",
                    "cleaning",
                    "collect_files",
                    "do_file_transfer",
                    "start_collect",
                    "get_sftp_connections",
                    "get_ssh_connection",
                    "collect_files",
                    "main",
                    "start_collect",
                    "main"
                ]
            },
            {
                "name": "get_file_checksum",
                "calls": [
                    "get_file_checksum",
                    "get_checksum_from_file",
                    "compare_checksums",
                    "get_file_checksum",
                    "get_checksum_from_file",
                    "cleaning",
                    "create_session_path",
                    "create_rule_dir",
                    "create_session_dir",
                    "create_session_dir",
                    "create_rule_dir",
                    "untar_remote",
                    "copy_files_if_valid",
                    "handle_error",
                    "do_file_transfer",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "compare_checksums",
                    "handle_error",
                    "handle_error",
                    "create_session_path",
                    "untar_remote",
                    "copy_files_if_valid",
                    "cleaning",
                    "collect_files",
                    "do_file_transfer",
                    "start_collect",
                    "get_sftp_connections",
                    "get_ssh_connection",
                    "collect_files",
                    "main",
                    "start_collect",
                    "main"
                ]
            },
            {
                "name": "get_checksum_from_file",
                "calls": [
                    "get_checksum_from_file",
                    "compare_checksums",
                    "get_file_checksum",
                    "get_checksum_from_file",
                    "cleaning",
                    "create_session_path",
                    "create_rule_dir",
                    "create_session_dir",
                    "create_session_dir",
                    "create_rule_dir",
                    "untar_remote",
                    "copy_files_if_valid",
                    "handle_error",
                    "do_file_transfer",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "compare_checksums",
                    "handle_error",
                    "handle_error",
                    "create_session_path",
                    "untar_remote",
                    "copy_files_if_valid",
                    "cleaning",
                    "collect_files",
                    "do_file_transfer",
                    "start_collect",
                    "get_sftp_connections",
                    "get_ssh_connection",
                    "collect_files",
                    "main",
                    "start_collect",
                    "main"
                ]
            },
            {
                "name": "compare_checksums",
                "calls": [
                    "compare_checksums",
                    "get_file_checksum",
                    "get_checksum_from_file",
                    "cleaning",
                    "create_session_path",
                    "create_rule_dir",
                    "create_session_dir",
                    "create_session_dir",
                    "create_rule_dir",
                    "untar_remote",
                    "copy_files_if_valid",
                    "handle_error",
                    "do_file_transfer",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "compare_checksums",
                    "handle_error",
                    "handle_error",
                    "create_session_path",
                    "untar_remote",
                    "copy_files_if_valid",
                    "cleaning",
                    "collect_files",
                    "do_file_transfer",
                    "start_collect",
                    "get_sftp_connections",
                    "get_ssh_connection",
                    "collect_files",
                    "main",
                    "start_collect",
                    "main"
                ]
            },
            {
                "name": "cleaning",
                "calls": [
                    "cleaning",
                    "create_session_path",
                    "create_rule_dir",
                    "create_session_dir",
                    "create_session_dir",
                    "create_rule_dir",
                    "untar_remote",
                    "copy_files_if_valid",
                    "handle_error",
                    "do_file_transfer",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "compare_checksums",
                    "handle_error",
                    "handle_error",
                    "create_session_path",
                    "untar_remote",
                    "copy_files_if_valid",
                    "cleaning",
                    "collect_files",
                    "do_file_transfer",
                    "start_collect",
                    "get_sftp_connections",
                    "get_ssh_connection",
                    "collect_files",
                    "main",
                    "start_collect",
                    "main"
                ]
            },
            {
                "name": "create_session_path",
                "calls": [
                    "create_session_path",
                    "create_rule_dir",
                    "create_session_dir",
                    "create_session_dir",
                    "create_rule_dir",
                    "untar_remote",
                    "copy_files_if_valid",
                    "handle_error",
                    "do_file_transfer",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "compare_checksums",
                    "handle_error",
                    "handle_error",
                    "create_session_path",
                    "untar_remote",
                    "copy_files_if_valid",
                    "cleaning",
                    "collect_files",
                    "do_file_transfer",
                    "start_collect",
                    "get_sftp_connections",
                    "get_ssh_connection",
                    "collect_files",
                    "main",
                    "start_collect",
                    "main"
                ]
            },
            {
                "name": "create_session_dir",
                "calls": [
                    "create_session_dir",
                    "create_rule_dir",
                    "untar_remote",
                    "copy_files_if_valid",
                    "handle_error",
                    "do_file_transfer",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "compare_checksums",
                    "handle_error",
                    "handle_error",
                    "create_session_path",
                    "untar_remote",
                    "copy_files_if_valid",
                    "cleaning",
                    "collect_files",
                    "do_file_transfer",
                    "start_collect",
                    "get_sftp_connections",
                    "get_ssh_connection",
                    "collect_files",
                    "main",
                    "start_collect",
                    "main"
                ]
            },
            {
                "name": "create_rule_dir",
                "calls": [
                    "create_rule_dir",
                    "untar_remote",
                    "copy_files_if_valid",
                    "handle_error",
                    "do_file_transfer",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "compare_checksums",
                    "handle_error",
                    "handle_error",
                    "create_session_path",
                    "untar_remote",
                    "copy_files_if_valid",
                    "cleaning",
                    "collect_files",
                    "do_file_transfer",
                    "start_collect",
                    "get_sftp_connections",
                    "get_ssh_connection",
                    "collect_files",
                    "main",
                    "start_collect",
                    "main"
                ]
            },
            {
                "name": "untar_remote",
                "calls": [
                    "untar_remote",
                    "copy_files_if_valid",
                    "handle_error",
                    "do_file_transfer",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "compare_checksums",
                    "handle_error",
                    "handle_error",
                    "create_session_path",
                    "untar_remote",
                    "copy_files_if_valid",
                    "cleaning",
                    "collect_files",
                    "do_file_transfer",
                    "start_collect",
                    "get_sftp_connections",
                    "get_ssh_connection",
                    "collect_files",
                    "main",
                    "start_collect",
                    "main"
                ]
            },
            {
                "name": "copy_files_if_valid",
                "calls": [
                    "copy_files_if_valid",
                    "handle_error",
                    "do_file_transfer",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "compare_checksums",
                    "handle_error",
                    "handle_error",
                    "create_session_path",
                    "untar_remote",
                    "copy_files_if_valid",
                    "cleaning",
                    "collect_files",
                    "do_file_transfer",
                    "start_collect",
                    "get_sftp_connections",
                    "get_ssh_connection",
                    "collect_files",
                    "main",
                    "start_collect",
                    "main"
                ]
            },
            {
                "name": "handle_error",
                "calls": [
                    "handle_error",
                    "do_file_transfer",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "compare_checksums",
                    "handle_error",
                    "handle_error",
                    "create_session_path",
                    "untar_remote",
                    "copy_files_if_valid",
                    "cleaning",
                    "collect_files",
                    "do_file_transfer",
                    "start_collect",
                    "get_sftp_connections",
                    "get_ssh_connection",
                    "collect_files",
                    "main",
                    "start_collect",
                    "main"
                ]
            },
            {
                "name": "do_file_transfer",
                "calls": [
                    "do_file_transfer",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "handle_error",
                    "compare_checksums",
                    "handle_error",
                    "handle_error",
                    "create_session_path",
                    "untar_remote",
                    "copy_files_if_valid",
                    "cleaning",
                    "collect_files",
                    "do_file_transfer",
                    "start_collect",
                    "get_sftp_connections",
                    "get_ssh_connection",
                    "collect_files",
                    "main",
                    "start_collect",
                    "main"
                ]
            },
            {
                "name": "collect_files",
                "calls": [
                    "collect_files",
                    "do_file_transfer",
                    "start_collect",
                    "get_sftp_connections",
                    "get_ssh_connection",
                    "collect_files",
                    "main",
                    "start_collect",
                    "main"
                ]
            },
            {
                "name": "start_collect",
                "calls": [
                    "start_collect",
                    "get_sftp_connections",
                    "get_ssh_connection",
                    "collect_files",
                    "main",
                    "start_collect",
                    "main"
                ]
            },
            {
                "name": "main",
                "calls": [
                    "main",
                    "start_collect",
                    "main"
                ]
            }
        ],
        "parents": [],
        "calls": [],
        "directory": "/Users/aleksejivanov/PycharmProjects/synonym-soft/itb-synonym-core/src/filetransfer",
        "filename": "core.py"
    },
    "FiletransferShell": {
        "name": "FiletransferShell",
        "methods": [
            {
                "name": "__init__",
                "calls": [
                    "__init__",
                    "super",
                    "__init__",
                    "ProfileManager",
                    "create_default_profile",
                    "add_commands",
                    "check_license",
                    "show_rule",
                    "info",
                    "items",
                    "show_users",
                    "join",
                    "show_profiles",
                    "get_profiles",
                    "show_profile_limits",
                    "parse_obj",
                    "get_profile",
                    "len",
                    "str",
                    "error",
                    "set_user_rule",
                    "get",
                    "UserNotFoundError",
                    "RuleNotFoundError",
                    "append",
                    "log_session_user_mgmt",
                    "set_rule_profile",
                    "RuleManager",
                    "get_rule",
                    "set_profile_to_rule",
                    "set_rule_mode",
                    "PushManager",
                    "get_push",
                    "ValueError",
                    "set_mode_to_rule",
                    "set_rule_push",
                    "set_push_to_rule",
                    "add_rule",
                    "ProfileNotFoundError",
                    "Rule",
                    "add_rule",
                    "add_user",
                    "get_secret_mngr",
                    "from_storage_dir",
                    "User",
                    "service_save",
                    "add_profile",
                    "Profile",
                    "add_profile",
                    "del_user",
                    "service_remove",
                    "del_profile",
                    "del_profile",
                    "set_profile_limit",
                    "get_limit_by_name",
                    "set_profile_limit",
                    "del_rule",
                    "UserManager",
                    "delete_rule",
                    "remove_user_rule",
                    "get_user",
                    "delete_rule_from_user",
                    "set_public_key",
                    "get_config",
                    "SignCheck",
                    "add_public_key",
                    "set_icap_config",
                    "IcapCheck",
                    "set_icap_config",
                    "icap_test_config",
                    "send_test_eicar",
                    "set_kavsdk_config",
                    "KavsdkCheck",
                    "set_kavsdk_config",
                    "kavsdk_test_config",
                    "scan_test_eicar",
                    "kavsdk_run",
                    "scan_dir_from_config",
                    "set_file_size_limit",
                    "FileCheckModel",
                    "LimitFile",
                    "load_config",
                    "save_config",
                    "format_validation_errors",
                    "add_mimetype_to_list",
                    "LimitManager",
                    "add_arg_to_list",
                    "remove_mimetype_from_list",
                    "remove_arg_from_list",
                    "reset_mimetype_list",
                    "reset_list",
                    "add_empty_mimetype_to_list",
                    "add_empty_to_list",
                    "remove_empty_mimetype_from_list",
                    "remove_empty_from_list",
                    "show_mimetype_list",
                    "show_list",
                    "add_extension_to_list",
                    "remove_extension_from_list",
                    "reset_extension_list",
                    "add_empty_extension_to_list",
                    "remove_empty_extension_from_list",
                    "show_extension_list",
                    "set_sftp_public_key",
                    "get_ft_user_pubkey_file",
                    "add_public_keys_from_input",
                    "change_pubkeys_flag",
                    "name_check_print",
                    "print",
                    "get_ft_connections_by_rule",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "get_ft_connections_by_substr",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "_get_ft_sessions_info",
                    "iterdir",
                    "open",
                    "load",
                    "FtSessionNewModel",
                    "_get_ft_info_str"
                ]
            },
            {
                "name": "show_rule",
                "calls": [
                    "show_rule",
                    "show_users",
                    "show_profiles",
                    "show_profile_limits",
                    "set_user_rule",
                    "set_rule_profile",
                    "set_rule_mode",
                    "set_rule_push",
                    "add_rule",
                    "add_rule",
                    "add_user",
                    "add_profile",
                    "add_profile",
                    "del_user",
                    "del_profile",
                    "del_profile",
                    "set_profile_limit",
                    "set_profile_limit",
                    "del_rule",
                    "remove_user_rule",
                    "set_public_key",
                    "set_icap_config",
                    "set_icap_config",
                    "icap_test_config",
                    "set_kavsdk_config",
                    "set_kavsdk_config",
                    "kavsdk_test_config",
                    "kavsdk_run",
                    "set_file_size_limit",
                    "add_mimetype_to_list",
                    "remove_mimetype_from_list",
                    "reset_mimetype_list",
                    "add_empty_mimetype_to_list",
                    "remove_empty_mimetype_from_list",
                    "show_mimetype_list",
                    "add_extension_to_list",
                    "remove_extension_from_list",
                    "reset_extension_list",
                    "add_empty_extension_to_list",
                    "remove_empty_extension_from_list",
                    "show_extension_list",
                    "set_sftp_public_key",
                    "name_check_print",
                    "get_ft_connections_by_rule",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "get_ft_connections_by_substr",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str"
                ]
            },
            {
                "name": "show_users",
                "calls": [
                    "show_users",
                    "show_profiles",
                    "show_profile_limits",
                    "set_user_rule",
                    "set_rule_profile",
                    "set_rule_mode",
                    "set_rule_push",
                    "add_rule",
                    "add_rule",
                    "add_user",
                    "add_profile",
                    "add_profile",
                    "del_user",
                    "del_profile",
                    "del_profile",
                    "set_profile_limit",
                    "set_profile_limit",
                    "del_rule",
                    "remove_user_rule",
                    "set_public_key",
                    "set_icap_config",
                    "set_icap_config",
                    "icap_test_config",
                    "set_kavsdk_config",
                    "set_kavsdk_config",
                    "kavsdk_test_config",
                    "kavsdk_run",
                    "set_file_size_limit",
                    "add_mimetype_to_list",
                    "remove_mimetype_from_list",
                    "reset_mimetype_list",
                    "add_empty_mimetype_to_list",
                    "remove_empty_mimetype_from_list",
                    "show_mimetype_list",
                    "add_extension_to_list",
                    "remove_extension_from_list",
                    "reset_extension_list",
                    "add_empty_extension_to_list",
                    "remove_empty_extension_from_list",
                    "show_extension_list",
                    "set_sftp_public_key",
                    "name_check_print",
                    "get_ft_connections_by_rule",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "get_ft_connections_by_substr",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str"
                ]
            },
            {
                "name": "show_profiles",
                "calls": [
                    "show_profiles",
                    "show_profile_limits",
                    "set_user_rule",
                    "set_rule_profile",
                    "set_rule_mode",
                    "set_rule_push",
                    "add_rule",
                    "add_rule",
                    "add_user",
                    "add_profile",
                    "add_profile",
                    "del_user",
                    "del_profile",
                    "del_profile",
                    "set_profile_limit",
                    "set_profile_limit",
                    "del_rule",
                    "remove_user_rule",
                    "set_public_key",
                    "set_icap_config",
                    "set_icap_config",
                    "icap_test_config",
                    "set_kavsdk_config",
                    "set_kavsdk_config",
                    "kavsdk_test_config",
                    "kavsdk_run",
                    "set_file_size_limit",
                    "add_mimetype_to_list",
                    "remove_mimetype_from_list",
                    "reset_mimetype_list",
                    "add_empty_mimetype_to_list",
                    "remove_empty_mimetype_from_list",
                    "show_mimetype_list",
                    "add_extension_to_list",
                    "remove_extension_from_list",
                    "reset_extension_list",
                    "add_empty_extension_to_list",
                    "remove_empty_extension_from_list",
                    "show_extension_list",
                    "set_sftp_public_key",
                    "name_check_print",
                    "get_ft_connections_by_rule",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "get_ft_connections_by_substr",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str"
                ]
            },
            {
                "name": "show_profile_limits",
                "calls": [
                    "show_profile_limits",
                    "set_user_rule",
                    "set_rule_profile",
                    "set_rule_mode",
                    "set_rule_push",
                    "add_rule",
                    "add_rule",
                    "add_user",
                    "add_profile",
                    "add_profile",
                    "del_user",
                    "del_profile",
                    "del_profile",
                    "set_profile_limit",
                    "set_profile_limit",
                    "del_rule",
                    "remove_user_rule",
                    "set_public_key",
                    "set_icap_config",
                    "set_icap_config",
                    "icap_test_config",
                    "set_kavsdk_config",
                    "set_kavsdk_config",
                    "kavsdk_test_config",
                    "kavsdk_run",
                    "set_file_size_limit",
                    "add_mimetype_to_list",
                    "remove_mimetype_from_list",
                    "reset_mimetype_list",
                    "add_empty_mimetype_to_list",
                    "remove_empty_mimetype_from_list",
                    "show_mimetype_list",
                    "add_extension_to_list",
                    "remove_extension_from_list",
                    "reset_extension_list",
                    "add_empty_extension_to_list",
                    "remove_empty_extension_from_list",
                    "show_extension_list",
                    "set_sftp_public_key",
                    "name_check_print",
                    "get_ft_connections_by_rule",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "get_ft_connections_by_substr",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str"
                ]
            },
            {
                "name": "set_user_rule",
                "calls": [
                    "set_user_rule",
                    "set_rule_profile",
                    "set_rule_mode",
                    "set_rule_push",
                    "add_rule",
                    "add_rule",
                    "add_user",
                    "add_profile",
                    "add_profile",
                    "del_user",
                    "del_profile",
                    "del_profile",
                    "set_profile_limit",
                    "set_profile_limit",
                    "del_rule",
                    "remove_user_rule",
                    "set_public_key",
                    "set_icap_config",
                    "set_icap_config",
                    "icap_test_config",
                    "set_kavsdk_config",
                    "set_kavsdk_config",
                    "kavsdk_test_config",
                    "kavsdk_run",
                    "set_file_size_limit",
                    "add_mimetype_to_list",
                    "remove_mimetype_from_list",
                    "reset_mimetype_list",
                    "add_empty_mimetype_to_list",
                    "remove_empty_mimetype_from_list",
                    "show_mimetype_list",
                    "add_extension_to_list",
                    "remove_extension_from_list",
                    "reset_extension_list",
                    "add_empty_extension_to_list",
                    "remove_empty_extension_from_list",
                    "show_extension_list",
                    "set_sftp_public_key",
                    "name_check_print",
                    "get_ft_connections_by_rule",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "get_ft_connections_by_substr",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str"
                ]
            },
            {
                "name": "set_rule_profile",
                "calls": [
                    "set_rule_profile",
                    "set_rule_mode",
                    "set_rule_push",
                    "add_rule",
                    "add_rule",
                    "add_user",
                    "add_profile",
                    "add_profile",
                    "del_user",
                    "del_profile",
                    "del_profile",
                    "set_profile_limit",
                    "set_profile_limit",
                    "del_rule",
                    "remove_user_rule",
                    "set_public_key",
                    "set_icap_config",
                    "set_icap_config",
                    "icap_test_config",
                    "set_kavsdk_config",
                    "set_kavsdk_config",
                    "kavsdk_test_config",
                    "kavsdk_run",
                    "set_file_size_limit",
                    "add_mimetype_to_list",
                    "remove_mimetype_from_list",
                    "reset_mimetype_list",
                    "add_empty_mimetype_to_list",
                    "remove_empty_mimetype_from_list",
                    "show_mimetype_list",
                    "add_extension_to_list",
                    "remove_extension_from_list",
                    "reset_extension_list",
                    "add_empty_extension_to_list",
                    "remove_empty_extension_from_list",
                    "show_extension_list",
                    "set_sftp_public_key",
                    "name_check_print",
                    "get_ft_connections_by_rule",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "get_ft_connections_by_substr",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str"
                ]
            },
            {
                "name": "set_rule_mode",
                "calls": [
                    "set_rule_mode",
                    "set_rule_push",
                    "add_rule",
                    "add_rule",
                    "add_user",
                    "add_profile",
                    "add_profile",
                    "del_user",
                    "del_profile",
                    "del_profile",
                    "set_profile_limit",
                    "set_profile_limit",
                    "del_rule",
                    "remove_user_rule",
                    "set_public_key",
                    "set_icap_config",
                    "set_icap_config",
                    "icap_test_config",
                    "set_kavsdk_config",
                    "set_kavsdk_config",
                    "kavsdk_test_config",
                    "kavsdk_run",
                    "set_file_size_limit",
                    "add_mimetype_to_list",
                    "remove_mimetype_from_list",
                    "reset_mimetype_list",
                    "add_empty_mimetype_to_list",
                    "remove_empty_mimetype_from_list",
                    "show_mimetype_list",
                    "add_extension_to_list",
                    "remove_extension_from_list",
                    "reset_extension_list",
                    "add_empty_extension_to_list",
                    "remove_empty_extension_from_list",
                    "show_extension_list",
                    "set_sftp_public_key",
                    "name_check_print",
                    "get_ft_connections_by_rule",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "get_ft_connections_by_substr",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str"
                ]
            },
            {
                "name": "set_rule_push",
                "calls": [
                    "set_rule_push",
                    "add_rule",
                    "add_rule",
                    "add_user",
                    "add_profile",
                    "add_profile",
                    "del_user",
                    "del_profile",
                    "del_profile",
                    "set_profile_limit",
                    "set_profile_limit",
                    "del_rule",
                    "remove_user_rule",
                    "set_public_key",
                    "set_icap_config",
                    "set_icap_config",
                    "icap_test_config",
                    "set_kavsdk_config",
                    "set_kavsdk_config",
                    "kavsdk_test_config",
                    "kavsdk_run",
                    "set_file_size_limit",
                    "add_mimetype_to_list",
                    "remove_mimetype_from_list",
                    "reset_mimetype_list",
                    "add_empty_mimetype_to_list",
                    "remove_empty_mimetype_from_list",
                    "show_mimetype_list",
                    "add_extension_to_list",
                    "remove_extension_from_list",
                    "reset_extension_list",
                    "add_empty_extension_to_list",
                    "remove_empty_extension_from_list",
                    "show_extension_list",
                    "set_sftp_public_key",
                    "name_check_print",
                    "get_ft_connections_by_rule",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "get_ft_connections_by_substr",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str"
                ]
            },
            {
                "name": "add_rule",
                "calls": [
                    "add_rule",
                    "add_rule",
                    "add_user",
                    "add_profile",
                    "add_profile",
                    "del_user",
                    "del_profile",
                    "del_profile",
                    "set_profile_limit",
                    "set_profile_limit",
                    "del_rule",
                    "remove_user_rule",
                    "set_public_key",
                    "set_icap_config",
                    "set_icap_config",
                    "icap_test_config",
                    "set_kavsdk_config",
                    "set_kavsdk_config",
                    "kavsdk_test_config",
                    "kavsdk_run",
                    "set_file_size_limit",
                    "add_mimetype_to_list",
                    "remove_mimetype_from_list",
                    "reset_mimetype_list",
                    "add_empty_mimetype_to_list",
                    "remove_empty_mimetype_from_list",
                    "show_mimetype_list",
                    "add_extension_to_list",
                    "remove_extension_from_list",
                    "reset_extension_list",
                    "add_empty_extension_to_list",
                    "remove_empty_extension_from_list",
                    "show_extension_list",
                    "set_sftp_public_key",
                    "name_check_print",
                    "get_ft_connections_by_rule",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "get_ft_connections_by_substr",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str"
                ]
            },
            {
                "name": "add_user",
                "calls": [
                    "add_user",
                    "add_profile",
                    "add_profile",
                    "del_user",
                    "del_profile",
                    "del_profile",
                    "set_profile_limit",
                    "set_profile_limit",
                    "del_rule",
                    "remove_user_rule",
                    "set_public_key",
                    "set_icap_config",
                    "set_icap_config",
                    "icap_test_config",
                    "set_kavsdk_config",
                    "set_kavsdk_config",
                    "kavsdk_test_config",
                    "kavsdk_run",
                    "set_file_size_limit",
                    "add_mimetype_to_list",
                    "remove_mimetype_from_list",
                    "reset_mimetype_list",
                    "add_empty_mimetype_to_list",
                    "remove_empty_mimetype_from_list",
                    "show_mimetype_list",
                    "add_extension_to_list",
                    "remove_extension_from_list",
                    "reset_extension_list",
                    "add_empty_extension_to_list",
                    "remove_empty_extension_from_list",
                    "show_extension_list",
                    "set_sftp_public_key",
                    "name_check_print",
                    "get_ft_connections_by_rule",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "get_ft_connections_by_substr",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str"
                ]
            },
            {
                "name": "add_profile",
                "calls": [
                    "add_profile",
                    "add_profile",
                    "del_user",
                    "del_profile",
                    "del_profile",
                    "set_profile_limit",
                    "set_profile_limit",
                    "del_rule",
                    "remove_user_rule",
                    "set_public_key",
                    "set_icap_config",
                    "set_icap_config",
                    "icap_test_config",
                    "set_kavsdk_config",
                    "set_kavsdk_config",
                    "kavsdk_test_config",
                    "kavsdk_run",
                    "set_file_size_limit",
                    "add_mimetype_to_list",
                    "remove_mimetype_from_list",
                    "reset_mimetype_list",
                    "add_empty_mimetype_to_list",
                    "remove_empty_mimetype_from_list",
                    "show_mimetype_list",
                    "add_extension_to_list",
                    "remove_extension_from_list",
                    "reset_extension_list",
                    "add_empty_extension_to_list",
                    "remove_empty_extension_from_list",
                    "show_extension_list",
                    "set_sftp_public_key",
                    "name_check_print",
                    "get_ft_connections_by_rule",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "get_ft_connections_by_substr",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str"
                ]
            },
            {
                "name": "del_user",
                "calls": [
                    "del_user",
                    "del_profile",
                    "del_profile",
                    "set_profile_limit",
                    "set_profile_limit",
                    "del_rule",
                    "remove_user_rule",
                    "set_public_key",
                    "set_icap_config",
                    "set_icap_config",
                    "icap_test_config",
                    "set_kavsdk_config",
                    "set_kavsdk_config",
                    "kavsdk_test_config",
                    "kavsdk_run",
                    "set_file_size_limit",
                    "add_mimetype_to_list",
                    "remove_mimetype_from_list",
                    "reset_mimetype_list",
                    "add_empty_mimetype_to_list",
                    "remove_empty_mimetype_from_list",
                    "show_mimetype_list",
                    "add_extension_to_list",
                    "remove_extension_from_list",
                    "reset_extension_list",
                    "add_empty_extension_to_list",
                    "remove_empty_extension_from_list",
                    "show_extension_list",
                    "set_sftp_public_key",
                    "name_check_print",
                    "get_ft_connections_by_rule",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "get_ft_connections_by_substr",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str"
                ]
            },
            {
                "name": "del_profile",
                "calls": [
                    "del_profile",
                    "del_profile",
                    "set_profile_limit",
                    "set_profile_limit",
                    "del_rule",
                    "remove_user_rule",
                    "set_public_key",
                    "set_icap_config",
                    "set_icap_config",
                    "icap_test_config",
                    "set_kavsdk_config",
                    "set_kavsdk_config",
                    "kavsdk_test_config",
                    "kavsdk_run",
                    "set_file_size_limit",
                    "add_mimetype_to_list",
                    "remove_mimetype_from_list",
                    "reset_mimetype_list",
                    "add_empty_mimetype_to_list",
                    "remove_empty_mimetype_from_list",
                    "show_mimetype_list",
                    "add_extension_to_list",
                    "remove_extension_from_list",
                    "reset_extension_list",
                    "add_empty_extension_to_list",
                    "remove_empty_extension_from_list",
                    "show_extension_list",
                    "set_sftp_public_key",
                    "name_check_print",
                    "get_ft_connections_by_rule",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "get_ft_connections_by_substr",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str"
                ]
            },
            {
                "name": "set_profile_limit",
                "calls": [
                    "set_profile_limit",
                    "set_profile_limit",
                    "del_rule",
                    "remove_user_rule",
                    "set_public_key",
                    "set_icap_config",
                    "set_icap_config",
                    "icap_test_config",
                    "set_kavsdk_config",
                    "set_kavsdk_config",
                    "kavsdk_test_config",
                    "kavsdk_run",
                    "set_file_size_limit",
                    "add_mimetype_to_list",
                    "remove_mimetype_from_list",
                    "reset_mimetype_list",
                    "add_empty_mimetype_to_list",
                    "remove_empty_mimetype_from_list",
                    "show_mimetype_list",
                    "add_extension_to_list",
                    "remove_extension_from_list",
                    "reset_extension_list",
                    "add_empty_extension_to_list",
                    "remove_empty_extension_from_list",
                    "show_extension_list",
                    "set_sftp_public_key",
                    "name_check_print",
                    "get_ft_connections_by_rule",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "get_ft_connections_by_substr",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str"
                ]
            },
            {
                "name": "del_rule",
                "calls": [
                    "del_rule",
                    "remove_user_rule",
                    "set_public_key",
                    "set_icap_config",
                    "set_icap_config",
                    "icap_test_config",
                    "set_kavsdk_config",
                    "set_kavsdk_config",
                    "kavsdk_test_config",
                    "kavsdk_run",
                    "set_file_size_limit",
                    "add_mimetype_to_list",
                    "remove_mimetype_from_list",
                    "reset_mimetype_list",
                    "add_empty_mimetype_to_list",
                    "remove_empty_mimetype_from_list",
                    "show_mimetype_list",
                    "add_extension_to_list",
                    "remove_extension_from_list",
                    "reset_extension_list",
                    "add_empty_extension_to_list",
                    "remove_empty_extension_from_list",
                    "show_extension_list",
                    "set_sftp_public_key",
                    "name_check_print",
                    "get_ft_connections_by_rule",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "get_ft_connections_by_substr",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str"
                ]
            },
            {
                "name": "remove_user_rule",
                "calls": [
                    "remove_user_rule",
                    "set_public_key",
                    "set_icap_config",
                    "set_icap_config",
                    "icap_test_config",
                    "set_kavsdk_config",
                    "set_kavsdk_config",
                    "kavsdk_test_config",
                    "kavsdk_run",
                    "set_file_size_limit",
                    "add_mimetype_to_list",
                    "remove_mimetype_from_list",
                    "reset_mimetype_list",
                    "add_empty_mimetype_to_list",
                    "remove_empty_mimetype_from_list",
                    "show_mimetype_list",
                    "add_extension_to_list",
                    "remove_extension_from_list",
                    "reset_extension_list",
                    "add_empty_extension_to_list",
                    "remove_empty_extension_from_list",
                    "show_extension_list",
                    "set_sftp_public_key",
                    "name_check_print",
                    "get_ft_connections_by_rule",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "get_ft_connections_by_substr",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str"
                ]
            },
            {
                "name": "set_public_key",
                "calls": [
                    "set_public_key",
                    "set_icap_config",
                    "set_icap_config",
                    "icap_test_config",
                    "set_kavsdk_config",
                    "set_kavsdk_config",
                    "kavsdk_test_config",
                    "kavsdk_run",
                    "set_file_size_limit",
                    "add_mimetype_to_list",
                    "remove_mimetype_from_list",
                    "reset_mimetype_list",
                    "add_empty_mimetype_to_list",
                    "remove_empty_mimetype_from_list",
                    "show_mimetype_list",
                    "add_extension_to_list",
                    "remove_extension_from_list",
                    "reset_extension_list",
                    "add_empty_extension_to_list",
                    "remove_empty_extension_from_list",
                    "show_extension_list",
                    "set_sftp_public_key",
                    "name_check_print",
                    "get_ft_connections_by_rule",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "get_ft_connections_by_substr",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str"
                ]
            },
            {
                "name": "set_icap_config",
                "calls": [
                    "set_icap_config",
                    "set_icap_config",
                    "icap_test_config",
                    "set_kavsdk_config",
                    "set_kavsdk_config",
                    "kavsdk_test_config",
                    "kavsdk_run",
                    "set_file_size_limit",
                    "add_mimetype_to_list",
                    "remove_mimetype_from_list",
                    "reset_mimetype_list",
                    "add_empty_mimetype_to_list",
                    "remove_empty_mimetype_from_list",
                    "show_mimetype_list",
                    "add_extension_to_list",
                    "remove_extension_from_list",
                    "reset_extension_list",
                    "add_empty_extension_to_list",
                    "remove_empty_extension_from_list",
                    "show_extension_list",
                    "set_sftp_public_key",
                    "name_check_print",
                    "get_ft_connections_by_rule",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "get_ft_connections_by_substr",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str"
                ]
            },
            {
                "name": "icap_test_config",
                "calls": [
                    "icap_test_config",
                    "set_kavsdk_config",
                    "set_kavsdk_config",
                    "kavsdk_test_config",
                    "kavsdk_run",
                    "set_file_size_limit",
                    "add_mimetype_to_list",
                    "remove_mimetype_from_list",
                    "reset_mimetype_list",
                    "add_empty_mimetype_to_list",
                    "remove_empty_mimetype_from_list",
                    "show_mimetype_list",
                    "add_extension_to_list",
                    "remove_extension_from_list",
                    "reset_extension_list",
                    "add_empty_extension_to_list",
                    "remove_empty_extension_from_list",
                    "show_extension_list",
                    "set_sftp_public_key",
                    "name_check_print",
                    "get_ft_connections_by_rule",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "get_ft_connections_by_substr",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str"
                ]
            },
            {
                "name": "set_kavsdk_config",
                "calls": [
                    "set_kavsdk_config",
                    "set_kavsdk_config",
                    "kavsdk_test_config",
                    "kavsdk_run",
                    "set_file_size_limit",
                    "add_mimetype_to_list",
                    "remove_mimetype_from_list",
                    "reset_mimetype_list",
                    "add_empty_mimetype_to_list",
                    "remove_empty_mimetype_from_list",
                    "show_mimetype_list",
                    "add_extension_to_list",
                    "remove_extension_from_list",
                    "reset_extension_list",
                    "add_empty_extension_to_list",
                    "remove_empty_extension_from_list",
                    "show_extension_list",
                    "set_sftp_public_key",
                    "name_check_print",
                    "get_ft_connections_by_rule",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "get_ft_connections_by_substr",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str"
                ]
            },
            {
                "name": "kavsdk_test_config",
                "calls": [
                    "kavsdk_test_config",
                    "kavsdk_run",
                    "set_file_size_limit",
                    "add_mimetype_to_list",
                    "remove_mimetype_from_list",
                    "reset_mimetype_list",
                    "add_empty_mimetype_to_list",
                    "remove_empty_mimetype_from_list",
                    "show_mimetype_list",
                    "add_extension_to_list",
                    "remove_extension_from_list",
                    "reset_extension_list",
                    "add_empty_extension_to_list",
                    "remove_empty_extension_from_list",
                    "show_extension_list",
                    "set_sftp_public_key",
                    "name_check_print",
                    "get_ft_connections_by_rule",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "get_ft_connections_by_substr",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str"
                ]
            },
            {
                "name": "kavsdk_run",
                "calls": [
                    "kavsdk_run",
                    "set_file_size_limit",
                    "add_mimetype_to_list",
                    "remove_mimetype_from_list",
                    "reset_mimetype_list",
                    "add_empty_mimetype_to_list",
                    "remove_empty_mimetype_from_list",
                    "show_mimetype_list",
                    "add_extension_to_list",
                    "remove_extension_from_list",
                    "reset_extension_list",
                    "add_empty_extension_to_list",
                    "remove_empty_extension_from_list",
                    "show_extension_list",
                    "set_sftp_public_key",
                    "name_check_print",
                    "get_ft_connections_by_rule",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "get_ft_connections_by_substr",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str"
                ]
            },
            {
                "name": "set_file_size_limit",
                "calls": [
                    "set_file_size_limit",
                    "add_mimetype_to_list",
                    "remove_mimetype_from_list",
                    "reset_mimetype_list",
                    "add_empty_mimetype_to_list",
                    "remove_empty_mimetype_from_list",
                    "show_mimetype_list",
                    "add_extension_to_list",
                    "remove_extension_from_list",
                    "reset_extension_list",
                    "add_empty_extension_to_list",
                    "remove_empty_extension_from_list",
                    "show_extension_list",
                    "set_sftp_public_key",
                    "name_check_print",
                    "get_ft_connections_by_rule",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "get_ft_connections_by_substr",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str"
                ]
            },
            {
                "name": "add_mimetype_to_list",
                "calls": [
                    "add_mimetype_to_list",
                    "remove_mimetype_from_list",
                    "reset_mimetype_list",
                    "add_empty_mimetype_to_list",
                    "remove_empty_mimetype_from_list",
                    "show_mimetype_list",
                    "add_extension_to_list",
                    "remove_extension_from_list",
                    "reset_extension_list",
                    "add_empty_extension_to_list",
                    "remove_empty_extension_from_list",
                    "show_extension_list",
                    "set_sftp_public_key",
                    "name_check_print",
                    "get_ft_connections_by_rule",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "get_ft_connections_by_substr",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str"
                ]
            },
            {
                "name": "remove_mimetype_from_list",
                "calls": [
                    "remove_mimetype_from_list",
                    "reset_mimetype_list",
                    "add_empty_mimetype_to_list",
                    "remove_empty_mimetype_from_list",
                    "show_mimetype_list",
                    "add_extension_to_list",
                    "remove_extension_from_list",
                    "reset_extension_list",
                    "add_empty_extension_to_list",
                    "remove_empty_extension_from_list",
                    "show_extension_list",
                    "set_sftp_public_key",
                    "name_check_print",
                    "get_ft_connections_by_rule",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "get_ft_connections_by_substr",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str"
                ]
            },
            {
                "name": "reset_mimetype_list",
                "calls": [
                    "reset_mimetype_list",
                    "add_empty_mimetype_to_list",
                    "remove_empty_mimetype_from_list",
                    "show_mimetype_list",
                    "add_extension_to_list",
                    "remove_extension_from_list",
                    "reset_extension_list",
                    "add_empty_extension_to_list",
                    "remove_empty_extension_from_list",
                    "show_extension_list",
                    "set_sftp_public_key",
                    "name_check_print",
                    "get_ft_connections_by_rule",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "get_ft_connections_by_substr",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str"
                ]
            },
            {
                "name": "add_empty_mimetype_to_list",
                "calls": [
                    "add_empty_mimetype_to_list",
                    "remove_empty_mimetype_from_list",
                    "show_mimetype_list",
                    "add_extension_to_list",
                    "remove_extension_from_list",
                    "reset_extension_list",
                    "add_empty_extension_to_list",
                    "remove_empty_extension_from_list",
                    "show_extension_list",
                    "set_sftp_public_key",
                    "name_check_print",
                    "get_ft_connections_by_rule",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "get_ft_connections_by_substr",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str"
                ]
            },
            {
                "name": "remove_empty_mimetype_from_list",
                "calls": [
                    "remove_empty_mimetype_from_list",
                    "show_mimetype_list",
                    "add_extension_to_list",
                    "remove_extension_from_list",
                    "reset_extension_list",
                    "add_empty_extension_to_list",
                    "remove_empty_extension_from_list",
                    "show_extension_list",
                    "set_sftp_public_key",
                    "name_check_print",
                    "get_ft_connections_by_rule",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "get_ft_connections_by_substr",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str"
                ]
            },
            {
                "name": "show_mimetype_list",
                "calls": [
                    "show_mimetype_list",
                    "add_extension_to_list",
                    "remove_extension_from_list",
                    "reset_extension_list",
                    "add_empty_extension_to_list",
                    "remove_empty_extension_from_list",
                    "show_extension_list",
                    "set_sftp_public_key",
                    "name_check_print",
                    "get_ft_connections_by_rule",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "get_ft_connections_by_substr",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str"
                ]
            },
            {
                "name": "add_extension_to_list",
                "calls": [
                    "add_extension_to_list",
                    "remove_extension_from_list",
                    "reset_extension_list",
                    "add_empty_extension_to_list",
                    "remove_empty_extension_from_list",
                    "show_extension_list",
                    "set_sftp_public_key",
                    "name_check_print",
                    "get_ft_connections_by_rule",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "get_ft_connections_by_substr",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str"
                ]
            },
            {
                "name": "remove_extension_from_list",
                "calls": [
                    "remove_extension_from_list",
                    "reset_extension_list",
                    "add_empty_extension_to_list",
                    "remove_empty_extension_from_list",
                    "show_extension_list",
                    "set_sftp_public_key",
                    "name_check_print",
                    "get_ft_connections_by_rule",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "get_ft_connections_by_substr",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str"
                ]
            },
            {
                "name": "reset_extension_list",
                "calls": [
                    "reset_extension_list",
                    "add_empty_extension_to_list",
                    "remove_empty_extension_from_list",
                    "show_extension_list",
                    "set_sftp_public_key",
                    "name_check_print",
                    "get_ft_connections_by_rule",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "get_ft_connections_by_substr",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str"
                ]
            },
            {
                "name": "add_empty_extension_to_list",
                "calls": [
                    "add_empty_extension_to_list",
                    "remove_empty_extension_from_list",
                    "show_extension_list",
                    "set_sftp_public_key",
                    "name_check_print",
                    "get_ft_connections_by_rule",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "get_ft_connections_by_substr",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str"
                ]
            },
            {
                "name": "remove_empty_extension_from_list",
                "calls": [
                    "remove_empty_extension_from_list",
                    "show_extension_list",
                    "set_sftp_public_key",
                    "name_check_print",
                    "get_ft_connections_by_rule",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "get_ft_connections_by_substr",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str"
                ]
            },
            {
                "name": "show_extension_list",
                "calls": [
                    "show_extension_list",
                    "set_sftp_public_key",
                    "name_check_print",
                    "get_ft_connections_by_rule",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "get_ft_connections_by_substr",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str"
                ]
            },
            {
                "name": "set_sftp_public_key",
                "calls": [
                    "set_sftp_public_key",
                    "name_check_print",
                    "get_ft_connections_by_rule",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "get_ft_connections_by_substr",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str"
                ]
            },
            {
                "name": "name_check_print",
                "calls": [
                    "name_check_print",
                    "get_ft_connections_by_rule",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "get_ft_connections_by_substr",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str"
                ]
            },
            {
                "name": "get_ft_connections_by_rule",
                "calls": [
                    "get_ft_connections_by_rule",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "get_ft_connections_by_substr",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str"
                ]
            },
            {
                "name": "get_ft_connections_by_substr",
                "calls": [
                    "get_ft_connections_by_substr",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str",
                    "_get_ft_sessions_info",
                    "_get_ft_info_str"
                ]
            },
            {
                "name": "_get_ft_sessions_info",
                "calls": [
                    "_get_ft_sessions_info",
                    "_get_ft_info_str"
                ]
            },
            {
                "name": "_get_ft_info_str",
                "calls": [
                    "_get_ft_info_str"
                ]
            }
        ],
        "parents": [
            "CommonShell"
        ],
        "calls": [],
        "directory": "/Users/aleksejivanov/PycharmProjects/synonym-soft/itb-synonym-core/src/filetransfer",
        "filename": "shell_commands.py"
    },
    "ShellSession": {
        "name": "ShellSession",
        "methods": [
            {
                "name": "__init__",
                "calls": [
                    "__init__",
                    "invoke_shell",
                    "__enter__",
                    "__exit__",
                    "error",
                    "close",
                    "send_remote_command",
                    "send",
                    "get_transport",
                    "open_channel",
                    "send_remote_command",
                    "sleep",
                    "get_prompt",
                    "get_prompt",
                    "recv_ready",
                    "recv",
                    "decode",
                    "split",
                    "join"
                ]
            },
            {
                "name": "__enter__",
                "calls": [
                    "__enter__",
                    "__exit__",
                    "send_remote_command",
                    "send_remote_command",
                    "get_prompt",
                    "get_prompt"
                ]
            },
            {
                "name": "__exit__",
                "calls": [
                    "__exit__",
                    "send_remote_command",
                    "send_remote_command",
                    "get_prompt",
                    "get_prompt"
                ]
            },
            {
                "name": "send_remote_command",
                "calls": [
                    "send_remote_command",
                    "send_remote_command",
                    "get_prompt",
                    "get_prompt"
                ]
            },
            {
                "name": "get_prompt",
                "calls": [
                    "get_prompt"
                ]
            }
        ],
        "parents": [
            "object"
        ],
        "calls": [],
        "directory": "/Users/aleksejivanov/PycharmProjects/synonym-soft/itb-synonym-core/src/filetransfer",
        "filename": "syn_config_ssh_keys.py"
    },
    "SSHConnection": {
        "name": "SSHConnection",
        "methods": [
            {
                "name": "ssh_session",
                "calls": [
                    "ssh_session",
                    "__init__",
                    "_setup",
                    "info",
                    "SSHClient",
                    "set_missing_host_key_policy",
                    "AutoAddPolicy",
                    "_setup",
                    "get_config_object",
                    "mkdir",
                    "as_posix",
                    "get_wing_interlink_ip",
                    "int",
                    "__enter__",
                    "__exit__",
                    "error",
                    "close",
                    "connect_to_node",
                    "connect",
                    "exit",
                    "add_ssh_keys",
                    "create_ssh_private_key",
                    "get_private_ssh_key",
                    "create_ssh_public_key",
                    "send_public_key_sftp",
                    "connect_to_node",
                    "send_public_key_sftp",
                    "connect_to_node",
                    "open_sftp",
                    "listdir",
                    "remove",
                    "rmdir",
                    "put",
                    "get_private_ssh_key",
                    "exists",
                    "RSAKey",
                    "create_ssh_private_key",
                    "generate",
                    "_write_private_key_file",
                    "chown",
                    "_write_private_key_file",
                    "fdopen",
                    "open",
                    "_write_private_key",
                    "_write_private_key",
                    "NoEncryption",
                    "write",
                    "private_bytes",
                    "decode",
                    "create_ssh_public_key",
                    "get_name",
                    "get_base64",
                    "change_password",
                    "join",
                    "choice",
                    "range",
                    "rv_run_command",
                    "flush",
                    "set_combine_stderr",
                    "check_nodes_connections",
                    "get",
                    "connect_to_node",
                    "connect_to_node",
                    "start_with_add_ssh_key",
                    "add_ssh_keys",
                    "change_password",
                    "add_ssh_keys",
                    "change_password",
                    "start_without_add_ssh_key",
                    "get_private_ssh_key",
                    "connect_to_node",
                    "read",
                    "get_private_ssh_key",
                    "connect_to_node",
                    "main",
                    "ArgumentParser",
                    "add_argument",
                    "parse_args",
                    "check_nodes_connections",
                    "start_with_add_ssh_key",
                    "start_without_add_ssh_key",
                    "main"
                ]
            },
            {
                "name": "__init__",
                "calls": [
                    "__init__",
                    "_setup",
                    "_setup",
                    "__enter__",
                    "__exit__",
                    "connect_to_node",
                    "add_ssh_keys",
                    "create_ssh_private_key",
                    "get_private_ssh_key",
                    "create_ssh_public_key",
                    "send_public_key_sftp",
                    "connect_to_node",
                    "send_public_key_sftp",
                    "connect_to_node",
                    "get_private_ssh_key",
                    "create_ssh_private_key",
                    "_write_private_key_file",
                    "_write_private_key_file",
                    "_write_private_key",
                    "_write_private_key",
                    "create_ssh_public_key",
                    "change_password",
                    "check_nodes_connections",
                    "connect_to_node",
                    "connect_to_node",
                    "start_with_add_ssh_key",
                    "add_ssh_keys",
                    "change_password",
                    "add_ssh_keys",
                    "change_password",
                    "start_without_add_ssh_key",
                    "get_private_ssh_key",
                    "connect_to_node",
                    "get_private_ssh_key",
                    "connect_to_node",
                    "main",
                    "check_nodes_connections",
                    "start_with_add_ssh_key",
                    "start_without_add_ssh_key",
                    "main"
                ]
            },
            {
                "name": "_setup",
                "calls": [
                    "_setup",
                    "__enter__",
                    "__exit__",
                    "connect_to_node",
                    "add_ssh_keys",
                    "create_ssh_private_key",
                    "get_private_ssh_key",
                    "create_ssh_public_key",
                    "send_public_key_sftp",
                    "connect_to_node",
                    "send_public_key_sftp",
                    "connect_to_node",
                    "get_private_ssh_key",
                    "create_ssh_private_key",
                    "_write_private_key_file",
                    "_write_private_key_file",
                    "_write_private_key",
                    "_write_private_key",
                    "create_ssh_public_key",
                    "change_password",
                    "check_nodes_connections",
                    "connect_to_node",
                    "connect_to_node",
                    "start_with_add_ssh_key",
                    "add_ssh_keys",
                    "change_password",
                    "add_ssh_keys",
                    "change_password",
                    "start_without_add_ssh_key",
                    "get_private_ssh_key",
                    "connect_to_node",
                    "get_private_ssh_key",
                    "connect_to_node",
                    "main",
                    "check_nodes_connections",
                    "start_with_add_ssh_key",
                    "start_without_add_ssh_key",
                    "main"
                ]
            },
            {
                "name": "__enter__",
                "calls": [
                    "__enter__",
                    "__exit__",
                    "connect_to_node",
                    "add_ssh_keys",
                    "create_ssh_private_key",
                    "get_private_ssh_key",
                    "create_ssh_public_key",
                    "send_public_key_sftp",
                    "connect_to_node",
                    "send_public_key_sftp",
                    "connect_to_node",
                    "get_private_ssh_key",
                    "create_ssh_private_key",
                    "_write_private_key_file",
                    "_write_private_key_file",
                    "_write_private_key",
                    "_write_private_key",
                    "create_ssh_public_key",
                    "change_password",
                    "check_nodes_connections",
                    "connect_to_node",
                    "connect_to_node",
                    "start_with_add_ssh_key",
                    "add_ssh_keys",
                    "change_password",
                    "add_ssh_keys",
                    "change_password",
                    "start_without_add_ssh_key",
                    "get_private_ssh_key",
                    "connect_to_node",
                    "get_private_ssh_key",
                    "connect_to_node",
                    "main",
                    "check_nodes_connections",
                    "start_with_add_ssh_key",
                    "start_without_add_ssh_key",
                    "main"
                ]
            },
            {
                "name": "__exit__",
                "calls": [
                    "__exit__",
                    "connect_to_node",
                    "add_ssh_keys",
                    "create_ssh_private_key",
                    "get_private_ssh_key",
                    "create_ssh_public_key",
                    "send_public_key_sftp",
                    "connect_to_node",
                    "send_public_key_sftp",
                    "connect_to_node",
                    "get_private_ssh_key",
                    "create_ssh_private_key",
                    "_write_private_key_file",
                    "_write_private_key_file",
                    "_write_private_key",
                    "_write_private_key",
                    "create_ssh_public_key",
                    "change_password",
                    "check_nodes_connections",
                    "connect_to_node",
                    "connect_to_node",
                    "start_with_add_ssh_key",
                    "add_ssh_keys",
                    "change_password",
                    "add_ssh_keys",
                    "change_password",
                    "start_without_add_ssh_key",
                    "get_private_ssh_key",
                    "connect_to_node",
                    "get_private_ssh_key",
                    "connect_to_node",
                    "main",
                    "check_nodes_connections",
                    "start_with_add_ssh_key",
                    "start_without_add_ssh_key",
                    "main"
                ]
            },
            {
                "name": "connect_to_node",
                "calls": [
                    "connect_to_node",
                    "add_ssh_keys",
                    "create_ssh_private_key",
                    "get_private_ssh_key",
                    "create_ssh_public_key",
                    "send_public_key_sftp",
                    "connect_to_node",
                    "send_public_key_sftp",
                    "connect_to_node",
                    "get_private_ssh_key",
                    "create_ssh_private_key",
                    "_write_private_key_file",
                    "_write_private_key_file",
                    "_write_private_key",
                    "_write_private_key",
                    "create_ssh_public_key",
                    "change_password",
                    "check_nodes_connections",
                    "connect_to_node",
                    "connect_to_node",
                    "start_with_add_ssh_key",
                    "add_ssh_keys",
                    "change_password",
                    "add_ssh_keys",
                    "change_password",
                    "start_without_add_ssh_key",
                    "get_private_ssh_key",
                    "connect_to_node",
                    "get_private_ssh_key",
                    "connect_to_node",
                    "main",
                    "check_nodes_connections",
                    "start_with_add_ssh_key",
                    "start_without_add_ssh_key",
                    "main"
                ]
            },
            {
                "name": "add_ssh_keys",
                "calls": [
                    "add_ssh_keys",
                    "create_ssh_private_key",
                    "get_private_ssh_key",
                    "create_ssh_public_key",
                    "send_public_key_sftp",
                    "connect_to_node",
                    "send_public_key_sftp",
                    "connect_to_node",
                    "get_private_ssh_key",
                    "create_ssh_private_key",
                    "_write_private_key_file",
                    "_write_private_key_file",
                    "_write_private_key",
                    "_write_private_key",
                    "create_ssh_public_key",
                    "change_password",
                    "check_nodes_connections",
                    "connect_to_node",
                    "connect_to_node",
                    "start_with_add_ssh_key",
                    "add_ssh_keys",
                    "change_password",
                    "add_ssh_keys",
                    "change_password",
                    "start_without_add_ssh_key",
                    "get_private_ssh_key",
                    "connect_to_node",
                    "get_private_ssh_key",
                    "connect_to_node",
                    "main",
                    "check_nodes_connections",
                    "start_with_add_ssh_key",
                    "start_without_add_ssh_key",
                    "main"
                ]
            },
            {
                "name": "send_public_key_sftp",
                "calls": [
                    "send_public_key_sftp",
                    "connect_to_node",
                    "get_private_ssh_key",
                    "create_ssh_private_key",
                    "_write_private_key_file",
                    "_write_private_key_file",
                    "_write_private_key",
                    "_write_private_key",
                    "create_ssh_public_key",
                    "change_password",
                    "check_nodes_connections",
                    "connect_to_node",
                    "connect_to_node",
                    "start_with_add_ssh_key",
                    "add_ssh_keys",
                    "change_password",
                    "add_ssh_keys",
                    "change_password",
                    "start_without_add_ssh_key",
                    "get_private_ssh_key",
                    "connect_to_node",
                    "get_private_ssh_key",
                    "connect_to_node",
                    "main",
                    "check_nodes_connections",
                    "start_with_add_ssh_key",
                    "start_without_add_ssh_key",
                    "main"
                ]
            },
            {
                "name": "get_private_ssh_key",
                "calls": [
                    "get_private_ssh_key",
                    "create_ssh_private_key",
                    "_write_private_key_file",
                    "_write_private_key_file",
                    "_write_private_key",
                    "_write_private_key",
                    "create_ssh_public_key",
                    "change_password",
                    "check_nodes_connections",
                    "connect_to_node",
                    "connect_to_node",
                    "start_with_add_ssh_key",
                    "add_ssh_keys",
                    "change_password",
                    "add_ssh_keys",
                    "change_password",
                    "start_without_add_ssh_key",
                    "get_private_ssh_key",
                    "connect_to_node",
                    "get_private_ssh_key",
                    "connect_to_node",
                    "main",
                    "check_nodes_connections",
                    "start_with_add_ssh_key",
                    "start_without_add_ssh_key",
                    "main"
                ]
            },
            {
                "name": "create_ssh_private_key",
                "calls": [
                    "create_ssh_private_key",
                    "_write_private_key_file",
                    "_write_private_key_file",
                    "_write_private_key",
                    "_write_private_key",
                    "create_ssh_public_key",
                    "change_password",
                    "check_nodes_connections",
                    "connect_to_node",
                    "connect_to_node",
                    "start_with_add_ssh_key",
                    "add_ssh_keys",
                    "change_password",
                    "add_ssh_keys",
                    "change_password",
                    "start_without_add_ssh_key",
                    "get_private_ssh_key",
                    "connect_to_node",
                    "get_private_ssh_key",
                    "connect_to_node",
                    "main",
                    "check_nodes_connections",
                    "start_with_add_ssh_key",
                    "start_without_add_ssh_key",
                    "main"
                ]
            },
            {
                "name": "_write_private_key_file",
                "calls": [
                    "_write_private_key_file",
                    "_write_private_key",
                    "_write_private_key",
                    "create_ssh_public_key",
                    "change_password",
                    "check_nodes_connections",
                    "connect_to_node",
                    "connect_to_node",
                    "start_with_add_ssh_key",
                    "add_ssh_keys",
                    "change_password",
                    "add_ssh_keys",
                    "change_password",
                    "start_without_add_ssh_key",
                    "get_private_ssh_key",
                    "connect_to_node",
                    "get_private_ssh_key",
                    "connect_to_node",
                    "main",
                    "check_nodes_connections",
                    "start_with_add_ssh_key",
                    "start_without_add_ssh_key",
                    "main"
                ]
            },
            {
                "name": "_write_private_key",
                "calls": [
                    "_write_private_key",
                    "create_ssh_public_key",
                    "change_password",
                    "check_nodes_connections",
                    "connect_to_node",
                    "connect_to_node",
                    "start_with_add_ssh_key",
                    "add_ssh_keys",
                    "change_password",
                    "add_ssh_keys",
                    "change_password",
                    "start_without_add_ssh_key",
                    "get_private_ssh_key",
                    "connect_to_node",
                    "get_private_ssh_key",
                    "connect_to_node",
                    "main",
                    "check_nodes_connections",
                    "start_with_add_ssh_key",
                    "start_without_add_ssh_key",
                    "main"
                ]
            },
            {
                "name": "create_ssh_public_key",
                "calls": [
                    "create_ssh_public_key",
                    "change_password",
                    "check_nodes_connections",
                    "connect_to_node",
                    "connect_to_node",
                    "start_with_add_ssh_key",
                    "add_ssh_keys",
                    "change_password",
                    "add_ssh_keys",
                    "change_password",
                    "start_without_add_ssh_key",
                    "get_private_ssh_key",
                    "connect_to_node",
                    "get_private_ssh_key",
                    "connect_to_node",
                    "main",
                    "check_nodes_connections",
                    "start_with_add_ssh_key",
                    "start_without_add_ssh_key",
                    "main"
                ]
            },
            {
                "name": "change_password",
                "calls": [
                    "change_password",
                    "check_nodes_connections",
                    "connect_to_node",
                    "connect_to_node",
                    "start_with_add_ssh_key",
                    "add_ssh_keys",
                    "change_password",
                    "add_ssh_keys",
                    "change_password",
                    "start_without_add_ssh_key",
                    "get_private_ssh_key",
                    "connect_to_node",
                    "get_private_ssh_key",
                    "connect_to_node",
                    "main",
                    "check_nodes_connections",
                    "start_with_add_ssh_key",
                    "start_without_add_ssh_key",
                    "main"
                ]
            },
            {
                "name": "check_nodes_connections",
                "calls": [
                    "check_nodes_connections",
                    "connect_to_node",
                    "connect_to_node",
                    "start_with_add_ssh_key",
                    "add_ssh_keys",
                    "change_password",
                    "add_ssh_keys",
                    "change_password",
                    "start_without_add_ssh_key",
                    "get_private_ssh_key",
                    "connect_to_node",
                    "get_private_ssh_key",
                    "connect_to_node",
                    "main",
                    "check_nodes_connections",
                    "start_with_add_ssh_key",
                    "start_without_add_ssh_key",
                    "main"
                ]
            },
            {
                "name": "start_with_add_ssh_key",
                "calls": [
                    "start_with_add_ssh_key",
                    "add_ssh_keys",
                    "change_password",
                    "add_ssh_keys",
                    "change_password",
                    "start_without_add_ssh_key",
                    "get_private_ssh_key",
                    "connect_to_node",
                    "get_private_ssh_key",
                    "connect_to_node",
                    "main",
                    "check_nodes_connections",
                    "start_with_add_ssh_key",
                    "start_without_add_ssh_key",
                    "main"
                ]
            },
            {
                "name": "start_without_add_ssh_key",
                "calls": [
                    "start_without_add_ssh_key",
                    "get_private_ssh_key",
                    "connect_to_node",
                    "get_private_ssh_key",
                    "connect_to_node",
                    "main",
                    "check_nodes_connections",
                    "start_with_add_ssh_key",
                    "start_without_add_ssh_key",
                    "main"
                ]
            },
            {
                "name": "main",
                "calls": [
                    "main",
                    "check_nodes_connections",
                    "start_with_add_ssh_key",
                    "start_without_add_ssh_key",
                    "main"
                ]
            }
        ],
        "parents": [
            "object"
        ],
        "calls": [],
        "directory": "/Users/aleksejivanov/PycharmProjects/synonym-soft/itb-synonym-core/src/filetransfer",
        "filename": "syn_config_ssh_keys.py"
    },
    "Fstab": {
        "name": "Fstab",
        "methods": [
            {
                "name": "__init__",
                "calls": [
                    "__init__",
                    "get_config",
                    "get_valid_fstab_config",
                    "read_conf",
                    "split",
                    "str",
                    "MountOptions",
                    "append",
                    "join",
                    "update_fstab_config",
                    "get_valid_fstab_config",
                    "error",
                    "write_conf",
                    "atomic_rename",
                    "get_remount_cmd",
                    "info",
                    "run"
                ]
            },
            {
                "name": "get_valid_fstab_config",
                "calls": [
                    "get_valid_fstab_config",
                    "update_fstab_config",
                    "get_valid_fstab_config"
                ]
            },
            {
                "name": "update_fstab_config",
                "calls": [
                    "update_fstab_config",
                    "get_valid_fstab_config"
                ]
            }
        ],
        "parents": [],
        "calls": [],
        "directory": "/Users/aleksejivanov/PycharmProjects/synonym-soft/itb-synonym-core/src/filetransfer",
        "filename": "fstab.py"
    },
    "ProfileManager": {
        "name": "ProfileManager",
        "methods": [
            {
                "name": "is_default",
                "calls": [
                    "is_default",
                    "not_edit_default_check",
                    "is_default",
                    "ValueError",
                    "is_exist",
                    "create_default_profile",
                    "Profile",
                    "Limit",
                    "is_exist",
                    "get_profile",
                    "get",
                    "ProfileNotFoundError",
                    "get_profiles",
                    "values",
                    "get_rule_names_by_profile",
                    "list",
                    "filter",
                    "add_profile",
                    "is_exist",
                    "error",
                    "AlreadyExistsError",
                    "info",
                    "log_changes",
                    "del_profile",
                    "is_exist",
                    "not_edit_default_check",
                    "get_rule_names_by_profile",
                    "join",
                    "set_profile_limit",
                    "not_edit_default_check",
                    "append"
                ]
            },
            {
                "name": "not_edit_default_check",
                "calls": [
                    "not_edit_default_check",
                    "is_default",
                    "is_exist",
                    "create_default_profile",
                    "is_exist",
                    "get_profile",
                    "get_profiles",
                    "get_rule_names_by_profile",
                    "add_profile",
                    "is_exist",
                    "del_profile",
                    "is_exist",
                    "not_edit_default_check",
                    "get_rule_names_by_profile",
                    "set_profile_limit",
                    "not_edit_default_check"
                ]
            },
            {
                "name": "is_exist",
                "calls": [
                    "is_exist",
                    "create_default_profile",
                    "is_exist",
                    "get_profile",
                    "get_profiles",
                    "get_rule_names_by_profile",
                    "add_profile",
                    "is_exist",
                    "del_profile",
                    "is_exist",
                    "not_edit_default_check",
                    "get_rule_names_by_profile",
                    "set_profile_limit",
                    "not_edit_default_check"
                ]
            },
            {
                "name": "create_default_profile",
                "calls": [
                    "create_default_profile",
                    "is_exist",
                    "get_profile",
                    "get_profiles",
                    "get_rule_names_by_profile",
                    "add_profile",
                    "is_exist",
                    "del_profile",
                    "is_exist",
                    "not_edit_default_check",
                    "get_rule_names_by_profile",
                    "set_profile_limit",
                    "not_edit_default_check"
                ]
            },
            {
                "name": "get_profile",
                "calls": [
                    "get_profile",
                    "get_profiles",
                    "get_rule_names_by_profile",
                    "add_profile",
                    "is_exist",
                    "del_profile",
                    "is_exist",
                    "not_edit_default_check",
                    "get_rule_names_by_profile",
                    "set_profile_limit",
                    "not_edit_default_check"
                ]
            },
            {
                "name": "get_profiles",
                "calls": [
                    "get_profiles",
                    "get_rule_names_by_profile",
                    "add_profile",
                    "is_exist",
                    "del_profile",
                    "is_exist",
                    "not_edit_default_check",
                    "get_rule_names_by_profile",
                    "set_profile_limit",
                    "not_edit_default_check"
                ]
            },
            {
                "name": "get_rule_names_by_profile",
                "calls": [
                    "get_rule_names_by_profile",
                    "add_profile",
                    "is_exist",
                    "del_profile",
                    "is_exist",
                    "not_edit_default_check",
                    "get_rule_names_by_profile",
                    "set_profile_limit",
                    "not_edit_default_check"
                ]
            },
            {
                "name": "add_profile",
                "calls": [
                    "add_profile",
                    "is_exist",
                    "del_profile",
                    "is_exist",
                    "not_edit_default_check",
                    "get_rule_names_by_profile",
                    "set_profile_limit",
                    "not_edit_default_check"
                ]
            },
            {
                "name": "del_profile",
                "calls": [
                    "del_profile",
                    "is_exist",
                    "not_edit_default_check",
                    "get_rule_names_by_profile",
                    "set_profile_limit",
                    "not_edit_default_check"
                ]
            },
            {
                "name": "set_profile_limit",
                "calls": [
                    "set_profile_limit",
                    "not_edit_default_check"
                ]
            }
        ],
        "parents": [
            "BaseFtManager"
        ],
        "calls": [],
        "directory": "/Users/aleksejivanov/PycharmProjects/synonym-soft/itb-synonym-core/src/filetransfer/ft_managers",
        "filename": "profile_manager.py"
    },
    "UserManager": {
        "name": "UserManager",
        "methods": [
            {
                "name": "is_exist",
                "calls": [
                    "is_exist",
                    "isinstance",
                    "values",
                    "get_user",
                    "get",
                    "UserNotFoundError",
                    "delete_rule_from_user",
                    "is_exist",
                    "RuleNotFoundError",
                    "remove",
                    "info"
                ]
            },
            {
                "name": "get_user",
                "calls": [
                    "get_user",
                    "delete_rule_from_user",
                    "is_exist"
                ]
            },
            {
                "name": "delete_rule_from_user",
                "calls": [
                    "delete_rule_from_user",
                    "is_exist"
                ]
            }
        ],
        "parents": [
            "BaseFtManager"
        ],
        "calls": [],
        "directory": "/Users/aleksejivanov/PycharmProjects/synonym-soft/itb-synonym-core/src/filetransfer/ft_managers",
        "filename": "user_manager.py"
    },
    "BaseFtManager": {
        "name": "BaseFtManager",
        "methods": [
            {
                "name": "__init__",
                "calls": [
                    "__init__"
                ]
            }
        ],
        "parents": [],
        "calls": [],
        "directory": "/Users/aleksejivanov/PycharmProjects/synonym-soft/itb-synonym-core/src/filetransfer/ft_managers",
        "filename": "base_manager.py"
    },
    "SSHPubKeyManager": {
        "name": "SSHPubKeyManager",
        "methods": [
            {
                "name": "__init__",
                "calls": [
                    "__init__",
                    "exists",
                    "FileNotFoundError",
                    "get_keys_from_file",
                    "open",
                    "readlines",
                    "get_valid_keys",
                    "is_valid_key",
                    "isinstance",
                    "encode",
                    "load_ssh_public_key",
                    "update_keys",
                    "get_keys_from_file",
                    "error",
                    "info",
                    "unlink",
                    "exit",
                    "get_keys_from_file",
                    "set",
                    "len",
                    "difference",
                    "update",
                    "list",
                    "write",
                    "join",
                    "add_public_keys_from_input",
                    "get_input",
                    "format",
                    "map",
                    "get_valid_keys",
                    "get_valid_keys",
                    "filter",
                    "is_valid_key"
                ]
            },
            {
                "name": "get_keys_from_file",
                "calls": [
                    "get_keys_from_file",
                    "get_valid_keys",
                    "is_valid_key",
                    "update_keys",
                    "get_keys_from_file",
                    "get_keys_from_file",
                    "add_public_keys_from_input",
                    "get_valid_keys",
                    "get_valid_keys",
                    "is_valid_key"
                ]
            },
            {
                "name": "is_valid_key",
                "calls": [
                    "is_valid_key",
                    "update_keys",
                    "get_keys_from_file",
                    "get_keys_from_file",
                    "add_public_keys_from_input",
                    "get_valid_keys",
                    "get_valid_keys",
                    "is_valid_key"
                ]
            },
            {
                "name": "update_keys",
                "calls": [
                    "update_keys",
                    "get_keys_from_file",
                    "get_keys_from_file",
                    "add_public_keys_from_input",
                    "get_valid_keys",
                    "get_valid_keys",
                    "is_valid_key"
                ]
            },
            {
                "name": "add_public_keys_from_input",
                "calls": [
                    "add_public_keys_from_input",
                    "get_valid_keys",
                    "get_valid_keys",
                    "is_valid_key"
                ]
            },
            {
                "name": "get_valid_keys",
                "calls": [
                    "get_valid_keys",
                    "is_valid_key"
                ]
            }
        ],
        "parents": [
            "InputMixin"
        ],
        "calls": [],
        "directory": "/Users/aleksejivanov/PycharmProjects/synonym-soft/itb-synonym-core/src/filetransfer/ft_managers",
        "filename": "ssh_public_key_manager.py"
    },
    "PasswordFtManager": {
        "name": "PasswordFtManager",
        "methods": [
            {
                "name": "get_objects_with_secret_id",
                "calls": [
                    "get_objects_with_secret_id",
                    "get_secret_id"
                ]
            },
            {
                "name": "get_secret_id",
                "calls": [
                    "get_secret_id"
                ]
            }
        ],
        "parents": [
            "BasePasswordManager"
        ],
        "calls": [],
        "directory": "/Users/aleksejivanov/PycharmProjects/synonym-soft/itb-synonym-core/src/filetransfer/ft_managers",
        "filename": "password_manager.py"
    },
    "RuleManager": {
        "name": "RuleManager",
        "methods": [
            {
                "name": "is_exist",
                "calls": [
                    "is_exist",
                    "values",
                    "is_rule_free",
                    "any",
                    "get_rule",
                    "get",
                    "RuleNotFoundError",
                    "add_rule",
                    "is_exist",
                    "AlreadyExistsError",
                    "info",
                    "log_changes",
                    "set_profile_to_rule",
                    "is_exist",
                    "set_mode_to_rule",
                    "is_exist",
                    "set_usb_to_rule",
                    "is_exist",
                    "check_rule_with_usb",
                    "UsbAlreadySetError",
                    "set_push_to_rule",
                    "is_exist",
                    "check_rule_with_usb",
                    "delete_usb_from_rule",
                    "is_exist",
                    "delete_rule",
                    "is_exist",
                    "is_rule_free",
                    "input",
                    "lower",
                    "ValueError",
                    "items",
                    "delete_rule_from_user"
                ]
            },
            {
                "name": "is_rule_free",
                "calls": [
                    "is_rule_free",
                    "get_rule",
                    "add_rule",
                    "is_exist",
                    "set_profile_to_rule",
                    "is_exist",
                    "set_mode_to_rule",
                    "is_exist",
                    "set_usb_to_rule",
                    "is_exist",
                    "check_rule_with_usb",
                    "set_push_to_rule",
                    "is_exist",
                    "check_rule_with_usb",
                    "delete_usb_from_rule",
                    "is_exist",
                    "delete_rule",
                    "is_exist",
                    "is_rule_free"
                ]
            },
            {
                "name": "get_rule",
                "calls": [
                    "get_rule",
                    "add_rule",
                    "is_exist",
                    "set_profile_to_rule",
                    "is_exist",
                    "set_mode_to_rule",
                    "is_exist",
                    "set_usb_to_rule",
                    "is_exist",
                    "check_rule_with_usb",
                    "set_push_to_rule",
                    "is_exist",
                    "check_rule_with_usb",
                    "delete_usb_from_rule",
                    "is_exist",
                    "delete_rule",
                    "is_exist",
                    "is_rule_free"
                ]
            },
            {
                "name": "add_rule",
                "calls": [
                    "add_rule",
                    "is_exist",
                    "set_profile_to_rule",
                    "is_exist",
                    "set_mode_to_rule",
                    "is_exist",
                    "set_usb_to_rule",
                    "is_exist",
                    "check_rule_with_usb",
                    "set_push_to_rule",
                    "is_exist",
                    "check_rule_with_usb",
                    "delete_usb_from_rule",
                    "is_exist",
                    "delete_rule",
                    "is_exist",
                    "is_rule_free"
                ]
            },
            {
                "name": "set_profile_to_rule",
                "calls": [
                    "set_profile_to_rule",
                    "is_exist",
                    "set_mode_to_rule",
                    "is_exist",
                    "set_usb_to_rule",
                    "is_exist",
                    "check_rule_with_usb",
                    "set_push_to_rule",
                    "is_exist",
                    "check_rule_with_usb",
                    "delete_usb_from_rule",
                    "is_exist",
                    "delete_rule",
                    "is_exist",
                    "is_rule_free"
                ]
            },
            {
                "name": "set_mode_to_rule",
                "calls": [
                    "set_mode_to_rule",
                    "is_exist",
                    "set_usb_to_rule",
                    "is_exist",
                    "check_rule_with_usb",
                    "set_push_to_rule",
                    "is_exist",
                    "check_rule_with_usb",
                    "delete_usb_from_rule",
                    "is_exist",
                    "delete_rule",
                    "is_exist",
                    "is_rule_free"
                ]
            },
            {
                "name": "set_usb_to_rule",
                "calls": [
                    "set_usb_to_rule",
                    "is_exist",
                    "check_rule_with_usb",
                    "set_push_to_rule",
                    "is_exist",
                    "check_rule_with_usb",
                    "delete_usb_from_rule",
                    "is_exist",
                    "delete_rule",
                    "is_exist",
                    "is_rule_free"
                ]
            },
            {
                "name": "set_push_to_rule",
                "calls": [
                    "set_push_to_rule",
                    "is_exist",
                    "check_rule_with_usb",
                    "delete_usb_from_rule",
                    "is_exist",
                    "delete_rule",
                    "is_exist",
                    "is_rule_free"
                ]
            },
            {
                "name": "check_rule_with_usb",
                "calls": [
                    "check_rule_with_usb",
                    "delete_usb_from_rule",
                    "is_exist",
                    "delete_rule",
                    "is_exist",
                    "is_rule_free"
                ]
            },
            {
                "name": "delete_usb_from_rule",
                "calls": [
                    "delete_usb_from_rule",
                    "is_exist",
                    "delete_rule",
                    "is_exist",
                    "is_rule_free"
                ]
            },
            {
                "name": "delete_rule",
                "calls": [
                    "delete_rule",
                    "is_exist",
                    "is_rule_free"
                ]
            }
        ],
        "parents": [
            "BaseFtManager"
        ],
        "calls": [],
        "directory": "/Users/aleksejivanov/PycharmProjects/synonym-soft/itb-synonym-core/src/filetransfer/ft_managers",
        "filename": "rule_manager.py"
    },
    "IcapCheck": {
        "name": "IcapCheck",
        "methods": [
            {
                "name": "__init__",
                "calls": [
                    "__init__",
                    "load_module_by_path",
                    "check_license",
                    "is_valid_file",
                    "info",
                    "send_file",
                    "str",
                    "loads",
                    "replace",
                    "upper",
                    "all",
                    "error",
                    "set_icap_config",
                    "get_config",
                    "get_input",
                    "join",
                    "dumps",
                    "write_text",
                    "Request",
                    "absolute",
                    "action_check_profile",
                    "move_config_from_temp_to_main",
                    "exists",
                    "read_text",
                    "get_icap_config",
                    "__init__",
                    "send_test_eicar",
                    "action_test_eicar",
                    "send_file",
                    "action_send_file",
                    "load_module_by_path",
                    "import_module"
                ]
            },
            {
                "name": "is_valid_file",
                "calls": [
                    "is_valid_file",
                    "send_file",
                    "set_icap_config",
                    "move_config_from_temp_to_main",
                    "get_icap_config",
                    "__init__",
                    "send_test_eicar",
                    "send_file",
                    "load_module_by_path"
                ]
            },
            {
                "name": "set_icap_config",
                "calls": [
                    "set_icap_config",
                    "move_config_from_temp_to_main",
                    "get_icap_config",
                    "__init__",
                    "send_test_eicar",
                    "send_file",
                    "load_module_by_path"
                ]
            },
            {
                "name": "move_config_from_temp_to_main",
                "calls": [
                    "move_config_from_temp_to_main",
                    "get_icap_config",
                    "__init__",
                    "send_test_eicar",
                    "send_file",
                    "load_module_by_path"
                ]
            },
            {
                "name": "get_icap_config",
                "calls": [
                    "get_icap_config",
                    "__init__",
                    "send_test_eicar",
                    "send_file",
                    "load_module_by_path"
                ]
            },
            {
                "name": "__init__",
                "calls": [
                    "__init__",
                    "load_module_by_path",
                    "is_valid_file",
                    "send_file",
                    "set_icap_config",
                    "move_config_from_temp_to_main",
                    "get_icap_config",
                    "__init__",
                    "send_test_eicar",
                    "send_file",
                    "load_module_by_path"
                ]
            },
            {
                "name": "send_test_eicar",
                "calls": [
                    "send_test_eicar",
                    "send_file",
                    "load_module_by_path"
                ]
            },
            {
                "name": "send_file",
                "calls": [
                    "send_file",
                    "load_module_by_path"
                ]
            },
            {
                "name": "load_module_by_path",
                "calls": [
                    "load_module_by_path"
                ]
            }
        ],
        "parents": [
            "BaseLimit",
            "InputMixin"
        ],
        "calls": [],
        "directory": "/Users/aleksejivanov/PycharmProjects/synonym-soft/itb-synonym-core/src/filetransfer/ext/limits",
        "filename": "icap_check.py"
    },
    "Request": {
        "name": "Request",
        "methods": [],
        "parents": [],
        "calls": [],
        "directory": "/Users/aleksejivanov/PycharmProjects/synonym-soft/itb-synonym-core/src/filetransfer/ext/limits",
        "filename": "icap_check.py"
    },
    "KavsdkCheck": {
        "name": "KavsdkCheck",
        "methods": [
            {
                "name": "__init__",
                "calls": [
                    "__init__",
                    "get_config",
                    "check_kavsdk_installation",
                    "check_kavsdk_installation",
                    "exists",
                    "error",
                    "set_kavsdk_config",
                    "info",
                    "get_input",
                    "join",
                    "loads",
                    "KavsdkCofigModel",
                    "dumps",
                    "write_text",
                    "move_config_from_temp_to_main",
                    "read_text",
                    "get_kavsdk_config",
                    "is_valid_file",
                    "KLBScan",
                    "run_klbscan",
                    "scan_test_eicar",
                    "TestEICAR",
                    "del_eicar_file",
                    "scan_dir_from_config",
                    "get_kavsdk_config",
                    "print"
                ]
            },
            {
                "name": "check_kavsdk_installation",
                "calls": [
                    "check_kavsdk_installation",
                    "set_kavsdk_config",
                    "move_config_from_temp_to_main",
                    "get_kavsdk_config",
                    "is_valid_file",
                    "scan_test_eicar",
                    "scan_dir_from_config",
                    "get_kavsdk_config"
                ]
            },
            {
                "name": "set_kavsdk_config",
                "calls": [
                    "set_kavsdk_config",
                    "move_config_from_temp_to_main",
                    "get_kavsdk_config",
                    "is_valid_file",
                    "scan_test_eicar",
                    "scan_dir_from_config",
                    "get_kavsdk_config"
                ]
            },
            {
                "name": "move_config_from_temp_to_main",
                "calls": [
                    "move_config_from_temp_to_main",
                    "get_kavsdk_config",
                    "is_valid_file",
                    "scan_test_eicar",
                    "scan_dir_from_config",
                    "get_kavsdk_config"
                ]
            },
            {
                "name": "get_kavsdk_config",
                "calls": [
                    "get_kavsdk_config",
                    "is_valid_file",
                    "scan_test_eicar",
                    "scan_dir_from_config",
                    "get_kavsdk_config"
                ]
            },
            {
                "name": "is_valid_file",
                "calls": [
                    "is_valid_file",
                    "scan_test_eicar",
                    "scan_dir_from_config",
                    "get_kavsdk_config"
                ]
            },
            {
                "name": "scan_test_eicar",
                "calls": [
                    "scan_test_eicar",
                    "scan_dir_from_config",
                    "get_kavsdk_config"
                ]
            },
            {
                "name": "scan_dir_from_config",
                "calls": [
                    "scan_dir_from_config",
                    "get_kavsdk_config"
                ]
            }
        ],
        "parents": [
            "BaseLimit",
            "InputMixin"
        ],
        "calls": [],
        "directory": "/Users/aleksejivanov/PycharmProjects/synonym-soft/itb-synonym-core/src/filetransfer/ext/limits",
        "filename": "kavsdk_check.py"
    },
    "SignCheck": {
        "name": "SignCheck",
        "methods": [
            {
                "name": "__init__",
                "calls": [
                    "__init__",
                    "super",
                    "__init__",
                    "default_backend",
                    "add_public_key",
                    "info",
                    "get_input",
                    "KEY",
                    "load_pem_public_key",
                    "encode",
                    "join",
                    "error",
                    "open",
                    "write",
                    "get_public_key",
                    "get_config",
                    "read_bytes",
                    "is_valid_file",
                    "with_suffix",
                    "exists",
                    "get_public_key",
                    "verify"
                ]
            },
            {
                "name": "add_public_key",
                "calls": [
                    "add_public_key",
                    "get_public_key",
                    "is_valid_file",
                    "get_public_key"
                ]
            },
            {
                "name": "get_public_key",
                "calls": [
                    "get_public_key",
                    "is_valid_file",
                    "get_public_key"
                ]
            },
            {
                "name": "is_valid_file",
                "calls": [
                    "is_valid_file",
                    "get_public_key"
                ]
            }
        ],
        "parents": [
            "BaseLimit",
            "InputMixin"
        ],
        "calls": [],
        "directory": "/Users/aleksejivanov/PycharmProjects/synonym-soft/itb-synonym-core/src/filetransfer/ext/limits",
        "filename": "sign_check.py"
    },
    "BaseLimit": {
        "name": "BaseLimit",
        "methods": [
            {
                "name": "is_valid_file",
                "calls": [
                    "is_valid_file"
                ]
            }
        ],
        "parents": [
            "ABC"
        ],
        "calls": [],
        "directory": "/Users/aleksejivanov/PycharmProjects/synonym-soft/itb-synonym-core/src/filetransfer/ext/limits",
        "filename": "base_limit.py"
    },
    "MimeCheck": {
        "name": "MimeCheck",
        "methods": [
            {
                "name": "__init__",
                "calls": [
                    "__init__",
                    "get_config_object",
                    "is_valid_file",
                    "guess_type",
                    "as_posix",
                    "error"
                ]
            },
            {
                "name": "is_valid_file",
                "calls": [
                    "is_valid_file"
                ]
            }
        ],
        "parents": [
            "BaseLimit"
        ],
        "calls": [],
        "directory": "/Users/aleksejivanov/PycharmProjects/synonym-soft/itb-synonym-core/src/filetransfer/ext/limits",
        "filename": "mime_check.py"
    },
    "ExtCheck": {
        "name": "ExtCheck",
        "methods": [
            {
                "name": "__init__",
                "calls": [
                    "__init__",
                    "get_config_object",
                    "is_valid_file",
                    "len",
                    "error"
                ]
            },
            {
                "name": "is_valid_file",
                "calls": [
                    "is_valid_file"
                ]
            }
        ],
        "parents": [
            "BaseLimit"
        ],
        "calls": [],
        "directory": "/Users/aleksejivanov/PycharmProjects/synonym-soft/itb-synonym-core/src/filetransfer/ext/limits",
        "filename": "ext_check.py"
    },
    "LimitFile": {
        "name": "LimitFile",
        "methods": [
            {
                "name": "__init__",
                "calls": [
                    "__init__",
                    "load_config",
                    "super",
                    "__init__",
                    "save_config",
                    "error",
                    "load_config",
                    "is_valid_file",
                    "load_config",
                    "exists",
                    "basename",
                    "len",
                    "any",
                    "range",
                    "ord",
                    "getsize",
                    "_in_allowed_ranges",
                    "_in_allowed_ranges"
                ]
            },
            {
                "name": "save_config",
                "calls": [
                    "save_config",
                    "load_config",
                    "is_valid_file",
                    "load_config",
                    "_in_allowed_ranges",
                    "_in_allowed_ranges"
                ]
            },
            {
                "name": "load_config",
                "calls": [
                    "load_config",
                    "is_valid_file",
                    "load_config",
                    "_in_allowed_ranges",
                    "_in_allowed_ranges"
                ]
            },
            {
                "name": "is_valid_file",
                "calls": [
                    "is_valid_file",
                    "load_config",
                    "_in_allowed_ranges",
                    "_in_allowed_ranges"
                ]
            },
            {
                "name": "_in_allowed_ranges",
                "calls": [
                    "_in_allowed_ranges"
                ]
            }
        ],
        "parents": [
            "BaseLimit"
        ],
        "calls": [],
        "directory": "/Users/aleksejivanov/PycharmProjects/synonym-soft/itb-synonym-core/src/filetransfer/ext/limits",
        "filename": "name_check.py"
    },
    "LimitManager": {
        "name": "LimitManager",
        "methods": [
            {
                "name": "limits",
                "calls": [
                    "limits",
                    "__init__",
                    "get_limit_impl_by_name",
                    "append",
                    "check_limits",
                    "limit_class",
                    "is_valid_file",
                    "info",
                    "EventRegistrator",
                    "log_session_error_in",
                    "log_session_error_out",
                    "register_event",
                    "error",
                    "get_available_limits_objects",
                    "Limit",
                    "get_default_limit",
                    "NotImplementedError",
                    "LimitFile",
                    "get_limit_by_name",
                    "get_available_limits_objects",
                    "get_limit_impl_by_name",
                    "get",
                    "add_to_list",
                    "remove_from_list",
                    "remove",
                    "add_arg_to_list",
                    "add_to_list",
                    "add_to_list",
                    "remove_arg_from_list",
                    "remove_from_list",
                    "remove_from_list",
                    "add_empty_to_list",
                    "add_arg_to_list",
                    "remove_empty_from_list",
                    "remove_arg_from_list",
                    "reset_list",
                    "clear",
                    "get_show_list",
                    "enumerate",
                    "show_list",
                    "get_show_list",
                    "join",
                    "get_show_list"
                ]
            },
            {
                "name": "__init__",
                "calls": [
                    "__init__",
                    "get_limit_impl_by_name",
                    "check_limits",
                    "get_available_limits_objects",
                    "get_default_limit",
                    "get_limit_by_name",
                    "get_available_limits_objects",
                    "get_limit_impl_by_name",
                    "add_to_list",
                    "remove_from_list",
                    "add_arg_to_list",
                    "add_to_list",
                    "add_to_list",
                    "remove_arg_from_list",
                    "remove_from_list",
                    "remove_from_list",
                    "add_empty_to_list",
                    "add_arg_to_list",
                    "remove_empty_from_list",
                    "remove_arg_from_list",
                    "reset_list",
                    "get_show_list",
                    "show_list",
                    "get_show_list",
                    "get_show_list"
                ]
            },
            {
                "name": "check_limits",
                "calls": [
                    "check_limits",
                    "get_available_limits_objects",
                    "get_default_limit",
                    "get_limit_by_name",
                    "get_available_limits_objects",
                    "get_limit_impl_by_name",
                    "add_to_list",
                    "remove_from_list",
                    "add_arg_to_list",
                    "add_to_list",
                    "add_to_list",
                    "remove_arg_from_list",
                    "remove_from_list",
                    "remove_from_list",
                    "add_empty_to_list",
                    "add_arg_to_list",
                    "remove_empty_from_list",
                    "remove_arg_from_list",
                    "reset_list",
                    "get_show_list",
                    "show_list",
                    "get_show_list",
                    "get_show_list"
                ]
            },
            {
                "name": "get_available_limits_objects",
                "calls": [
                    "get_available_limits_objects",
                    "get_default_limit",
                    "get_limit_by_name",
                    "get_available_limits_objects",
                    "get_limit_impl_by_name",
                    "add_to_list",
                    "remove_from_list",
                    "add_arg_to_list",
                    "add_to_list",
                    "add_to_list",
                    "remove_arg_from_list",
                    "remove_from_list",
                    "remove_from_list",
                    "add_empty_to_list",
                    "add_arg_to_list",
                    "remove_empty_from_list",
                    "remove_arg_from_list",
                    "reset_list",
                    "get_show_list",
                    "show_list",
                    "get_show_list",
                    "get_show_list"
                ]
            },
            {
                "name": "get_default_limit",
                "calls": [
                    "get_default_limit",
                    "get_limit_by_name",
                    "get_available_limits_objects",
                    "get_limit_impl_by_name",
                    "add_to_list",
                    "remove_from_list",
                    "add_arg_to_list",
                    "add_to_list",
                    "add_to_list",
                    "remove_arg_from_list",
                    "remove_from_list",
                    "remove_from_list",
                    "add_empty_to_list",
                    "add_arg_to_list",
                    "remove_empty_from_list",
                    "remove_arg_from_list",
                    "reset_list",
                    "get_show_list",
                    "show_list",
                    "get_show_list",
                    "get_show_list"
                ]
            },
            {
                "name": "get_limit_by_name",
                "calls": [
                    "get_limit_by_name",
                    "get_available_limits_objects",
                    "get_limit_impl_by_name",
                    "add_to_list",
                    "remove_from_list",
                    "add_arg_to_list",
                    "add_to_list",
                    "add_to_list",
                    "remove_arg_from_list",
                    "remove_from_list",
                    "remove_from_list",
                    "add_empty_to_list",
                    "add_arg_to_list",
                    "remove_empty_from_list",
                    "remove_arg_from_list",
                    "reset_list",
                    "get_show_list",
                    "show_list",
                    "get_show_list",
                    "get_show_list"
                ]
            },
            {
                "name": "get_limit_impl_by_name",
                "calls": [
                    "get_limit_impl_by_name",
                    "add_to_list",
                    "remove_from_list",
                    "add_arg_to_list",
                    "add_to_list",
                    "add_to_list",
                    "remove_arg_from_list",
                    "remove_from_list",
                    "remove_from_list",
                    "add_empty_to_list",
                    "add_arg_to_list",
                    "remove_empty_from_list",
                    "remove_arg_from_list",
                    "reset_list",
                    "get_show_list",
                    "show_list",
                    "get_show_list",
                    "get_show_list"
                ]
            },
            {
                "name": "add_to_list",
                "calls": [
                    "add_to_list",
                    "remove_from_list",
                    "add_arg_to_list",
                    "add_to_list",
                    "add_to_list",
                    "remove_arg_from_list",
                    "remove_from_list",
                    "remove_from_list",
                    "add_empty_to_list",
                    "add_arg_to_list",
                    "remove_empty_from_list",
                    "remove_arg_from_list",
                    "reset_list",
                    "get_show_list",
                    "show_list",
                    "get_show_list",
                    "get_show_list"
                ]
            },
            {
                "name": "remove_from_list",
                "calls": [
                    "remove_from_list",
                    "add_arg_to_list",
                    "add_to_list",
                    "add_to_list",
                    "remove_arg_from_list",
                    "remove_from_list",
                    "remove_from_list",
                    "add_empty_to_list",
                    "add_arg_to_list",
                    "remove_empty_from_list",
                    "remove_arg_from_list",
                    "reset_list",
                    "get_show_list",
                    "show_list",
                    "get_show_list",
                    "get_show_list"
                ]
            },
            {
                "name": "add_arg_to_list",
                "calls": [
                    "add_arg_to_list",
                    "add_to_list",
                    "add_to_list",
                    "remove_arg_from_list",
                    "remove_from_list",
                    "remove_from_list",
                    "add_empty_to_list",
                    "add_arg_to_list",
                    "remove_empty_from_list",
                    "remove_arg_from_list",
                    "reset_list",
                    "get_show_list",
                    "show_list",
                    "get_show_list",
                    "get_show_list"
                ]
            },
            {
                "name": "remove_arg_from_list",
                "calls": [
                    "remove_arg_from_list",
                    "remove_from_list",
                    "remove_from_list",
                    "add_empty_to_list",
                    "add_arg_to_list",
                    "remove_empty_from_list",
                    "remove_arg_from_list",
                    "reset_list",
                    "get_show_list",
                    "show_list",
                    "get_show_list",
                    "get_show_list"
                ]
            },
            {
                "name": "add_empty_to_list",
                "calls": [
                    "add_empty_to_list",
                    "add_arg_to_list",
                    "remove_empty_from_list",
                    "remove_arg_from_list",
                    "reset_list",
                    "get_show_list",
                    "show_list",
                    "get_show_list",
                    "get_show_list"
                ]
            },
            {
                "name": "remove_empty_from_list",
                "calls": [
                    "remove_empty_from_list",
                    "remove_arg_from_list",
                    "reset_list",
                    "get_show_list",
                    "show_list",
                    "get_show_list",
                    "get_show_list"
                ]
            },
            {
                "name": "reset_list",
                "calls": [
                    "reset_list",
                    "get_show_list",
                    "show_list",
                    "get_show_list",
                    "get_show_list"
                ]
            },
            {
                "name": "get_show_list",
                "calls": [
                    "get_show_list",
                    "show_list",
                    "get_show_list",
                    "get_show_list"
                ]
            },
            {
                "name": "show_list",
                "calls": [
                    "show_list",
                    "get_show_list",
                    "get_show_list"
                ]
            }
        ],
        "parents": [],
        "calls": [],
        "directory": "/Users/aleksejivanov/PycharmProjects/synonym-soft/itb-synonym-core/src/filetransfer/ext/limits",
        "filename": "limit_manager.py"
    },
    "UsbManager": {
        "name": "UsbManager",
        "methods": [
            {
                "name": "is_exist",
                "calls": [
                    "is_exist",
                    "values",
                    "add_usb",
                    "is_exist",
                    "AlreadyExistsError",
                    "get_usb",
                    "get",
                    "UsbNotFoundError",
                    "delete_usb",
                    "get_usb",
                    "is_exist",
                    "Exception",
                    "pop"
                ]
            },
            {
                "name": "add_usb",
                "calls": [
                    "add_usb",
                    "is_exist",
                    "get_usb",
                    "delete_usb",
                    "get_usb",
                    "is_exist"
                ]
            },
            {
                "name": "get_usb",
                "calls": [
                    "get_usb",
                    "delete_usb",
                    "get_usb",
                    "is_exist"
                ]
            },
            {
                "name": "delete_usb",
                "calls": [
                    "delete_usb",
                    "get_usb",
                    "is_exist"
                ]
            }
        ],
        "parents": [
            "BaseFtManager"
        ],
        "calls": [],
        "directory": "/Users/aleksejivanov/PycharmProjects/synonym-soft/itb-synonym-core/src/filetransfer/ext/usb",
        "filename": "usb_manager.py"
    },
    "UsbShell": {
        "name": "UsbShell",
        "methods": [
            {
                "name": "__init__",
                "calls": [
                    "__init__",
                    "super",
                    "__init__",
                    "add_commands",
                    "add_usb",
                    "getuser",
                    "PermissionError",
                    "UsbManager",
                    "parse_obj",
                    "Popen",
                    "communicate",
                    "decode",
                    "split",
                    "list",
                    "set",
                    "replace",
                    "Usb",
                    "add_usb",
                    "info",
                    "del_usb",
                    "delete_usb",
                    "show_list_usb",
                    "values",
                    "print",
                    "set_usb_rule",
                    "get_usb",
                    "RuleManager",
                    "get_rule",
                    "set_usb_to_rule",
                    "remove_usb_rule",
                    "delete_usb_from_rule"
                ]
            },
            {
                "name": "add_usb",
                "calls": [
                    "add_usb",
                    "add_usb",
                    "del_usb",
                    "show_list_usb",
                    "set_usb_rule",
                    "remove_usb_rule"
                ]
            },
            {
                "name": "del_usb",
                "calls": [
                    "del_usb",
                    "show_list_usb",
                    "set_usb_rule",
                    "remove_usb_rule"
                ]
            },
            {
                "name": "show_list_usb",
                "calls": [
                    "show_list_usb",
                    "set_usb_rule",
                    "remove_usb_rule"
                ]
            },
            {
                "name": "set_usb_rule",
                "calls": [
                    "set_usb_rule",
                    "remove_usb_rule"
                ]
            },
            {
                "name": "remove_usb_rule",
                "calls": [
                    "remove_usb_rule"
                ]
            }
        ],
        "parents": [
            "CommonShell"
        ],
        "calls": [],
        "directory": "/Users/aleksejivanov/PycharmProjects/synonym-soft/itb-synonym-core/src/filetransfer/ext/usb",
        "filename": "shell_commands.py"
    },
    "USBRunner": {
        "name": "USBRunner",
        "methods": [
            {
                "name": "__init__",
                "calls": [
                    "__init__",
                    "set",
                    "get_rule_with_usb",
                    "values",
                    "get_rule_users",
                    "items",
                    "add",
                    "set_upload_dirs_path",
                    "get_rule_users",
                    "set_get_dirs_path",
                    "get_rule_users",
                    "copy_content",
                    "iterdir",
                    "info",
                    "exists",
                    "is_dir",
                    "copytree",
                    "copy",
                    "move_content",
                    "move",
                    "_copy_file",
                    "start_check_files",
                    "now",
                    "strftime",
                    "str",
                    "uuid1",
                    "run",
                    "copy_logs_upload",
                    "upload_files",
                    "error",
                    "get_rule_with_usb",
                    "UsbNotFoundError",
                    "set_upload_dirs_path",
                    "check_storage_on_upload",
                    "copy_content",
                    "start_check_files",
                    "get_files",
                    "get_rule_with_usb",
                    "set_get_dirs_path",
                    "check_storage_on_get",
                    "copy_content",
                    "check_storage_on_upload",
                    "statvfs",
                    "NotEnoughSpaceError",
                    "check_storage_on_get",
                    "copy_logs_upload",
                    "Path",
                    "with_suffix",
                    "_copy_file",
                    "main",
                    "ArgumentParser",
                    "add_argument",
                    "parse_args",
                    "get_config_object",
                    "UsbManager",
                    "get_usb",
                    "upload_files",
                    "get_files",
                    "upload_files",
                    "get_files",
                    "exit",
                    "main"
                ]
            },
            {
                "name": "get_rule_with_usb",
                "calls": [
                    "get_rule_with_usb",
                    "get_rule_users",
                    "set_upload_dirs_path",
                    "get_rule_users",
                    "set_get_dirs_path",
                    "get_rule_users",
                    "copy_content",
                    "move_content",
                    "_copy_file",
                    "start_check_files",
                    "copy_logs_upload",
                    "upload_files",
                    "get_rule_with_usb",
                    "set_upload_dirs_path",
                    "check_storage_on_upload",
                    "copy_content",
                    "start_check_files",
                    "get_files",
                    "get_rule_with_usb",
                    "set_get_dirs_path",
                    "check_storage_on_get",
                    "copy_content",
                    "check_storage_on_upload",
                    "check_storage_on_get",
                    "copy_logs_upload",
                    "_copy_file",
                    "main",
                    "upload_files",
                    "get_files",
                    "upload_files",
                    "get_files",
                    "main"
                ]
            },
            {
                "name": "get_rule_users",
                "calls": [
                    "get_rule_users",
                    "set_upload_dirs_path",
                    "get_rule_users",
                    "set_get_dirs_path",
                    "get_rule_users",
                    "copy_content",
                    "move_content",
                    "_copy_file",
                    "start_check_files",
                    "copy_logs_upload",
                    "upload_files",
                    "get_rule_with_usb",
                    "set_upload_dirs_path",
                    "check_storage_on_upload",
                    "copy_content",
                    "start_check_files",
                    "get_files",
                    "get_rule_with_usb",
                    "set_get_dirs_path",
                    "check_storage_on_get",
                    "copy_content",
                    "check_storage_on_upload",
                    "check_storage_on_get",
                    "copy_logs_upload",
                    "_copy_file",
                    "main",
                    "upload_files",
                    "get_files",
                    "upload_files",
                    "get_files",
                    "main"
                ]
            },
            {
                "name": "set_upload_dirs_path",
                "calls": [
                    "set_upload_dirs_path",
                    "get_rule_users",
                    "set_get_dirs_path",
                    "get_rule_users",
                    "copy_content",
                    "move_content",
                    "_copy_file",
                    "start_check_files",
                    "copy_logs_upload",
                    "upload_files",
                    "get_rule_with_usb",
                    "set_upload_dirs_path",
                    "check_storage_on_upload",
                    "copy_content",
                    "start_check_files",
                    "get_files",
                    "get_rule_with_usb",
                    "set_get_dirs_path",
                    "check_storage_on_get",
                    "copy_content",
                    "check_storage_on_upload",
                    "check_storage_on_get",
                    "copy_logs_upload",
                    "_copy_file",
                    "main",
                    "upload_files",
                    "get_files",
                    "upload_files",
                    "get_files",
                    "main"
                ]
            },
            {
                "name": "set_get_dirs_path",
                "calls": [
                    "set_get_dirs_path",
                    "get_rule_users",
                    "copy_content",
                    "move_content",
                    "_copy_file",
                    "start_check_files",
                    "copy_logs_upload",
                    "upload_files",
                    "get_rule_with_usb",
                    "set_upload_dirs_path",
                    "check_storage_on_upload",
                    "copy_content",
                    "start_check_files",
                    "get_files",
                    "get_rule_with_usb",
                    "set_get_dirs_path",
                    "check_storage_on_get",
                    "copy_content",
                    "check_storage_on_upload",
                    "check_storage_on_get",
                    "copy_logs_upload",
                    "_copy_file",
                    "main",
                    "upload_files",
                    "get_files",
                    "upload_files",
                    "get_files",
                    "main"
                ]
            },
            {
                "name": "copy_content",
                "calls": [
                    "copy_content",
                    "move_content",
                    "_copy_file",
                    "start_check_files",
                    "copy_logs_upload",
                    "upload_files",
                    "get_rule_with_usb",
                    "set_upload_dirs_path",
                    "check_storage_on_upload",
                    "copy_content",
                    "start_check_files",
                    "get_files",
                    "get_rule_with_usb",
                    "set_get_dirs_path",
                    "check_storage_on_get",
                    "copy_content",
                    "check_storage_on_upload",
                    "check_storage_on_get",
                    "copy_logs_upload",
                    "_copy_file",
                    "main",
                    "upload_files",
                    "get_files",
                    "upload_files",
                    "get_files",
                    "main"
                ]
            },
            {
                "name": "move_content",
                "calls": [
                    "move_content",
                    "_copy_file",
                    "start_check_files",
                    "copy_logs_upload",
                    "upload_files",
                    "get_rule_with_usb",
                    "set_upload_dirs_path",
                    "check_storage_on_upload",
                    "copy_content",
                    "start_check_files",
                    "get_files",
                    "get_rule_with_usb",
                    "set_get_dirs_path",
                    "check_storage_on_get",
                    "copy_content",
                    "check_storage_on_upload",
                    "check_storage_on_get",
                    "copy_logs_upload",
                    "_copy_file",
                    "main",
                    "upload_files",
                    "get_files",
                    "upload_files",
                    "get_files",
                    "main"
                ]
            },
            {
                "name": "_copy_file",
                "calls": [
                    "_copy_file",
                    "start_check_files",
                    "copy_logs_upload",
                    "upload_files",
                    "get_rule_with_usb",
                    "set_upload_dirs_path",
                    "check_storage_on_upload",
                    "copy_content",
                    "start_check_files",
                    "get_files",
                    "get_rule_with_usb",
                    "set_get_dirs_path",
                    "check_storage_on_get",
                    "copy_content",
                    "check_storage_on_upload",
                    "check_storage_on_get",
                    "copy_logs_upload",
                    "_copy_file",
                    "main",
                    "upload_files",
                    "get_files",
                    "upload_files",
                    "get_files",
                    "main"
                ]
            },
            {
                "name": "start_check_files",
                "calls": [
                    "start_check_files",
                    "copy_logs_upload",
                    "upload_files",
                    "get_rule_with_usb",
                    "set_upload_dirs_path",
                    "check_storage_on_upload",
                    "copy_content",
                    "start_check_files",
                    "get_files",
                    "get_rule_with_usb",
                    "set_get_dirs_path",
                    "check_storage_on_get",
                    "copy_content",
                    "check_storage_on_upload",
                    "check_storage_on_get",
                    "copy_logs_upload",
                    "_copy_file",
                    "main",
                    "upload_files",
                    "get_files",
                    "upload_files",
                    "get_files",
                    "main"
                ]
            },
            {
                "name": "upload_files",
                "calls": [
                    "upload_files",
                    "get_rule_with_usb",
                    "set_upload_dirs_path",
                    "check_storage_on_upload",
                    "copy_content",
                    "start_check_files",
                    "get_files",
                    "get_rule_with_usb",
                    "set_get_dirs_path",
                    "check_storage_on_get",
                    "copy_content",
                    "check_storage_on_upload",
                    "check_storage_on_get",
                    "copy_logs_upload",
                    "_copy_file",
                    "main",
                    "upload_files",
                    "get_files",
                    "upload_files",
                    "get_files",
                    "main"
                ]
            },
            {
                "name": "get_files",
                "calls": [
                    "get_files",
                    "get_rule_with_usb",
                    "set_get_dirs_path",
                    "check_storage_on_get",
                    "copy_content",
                    "check_storage_on_upload",
                    "check_storage_on_get",
                    "copy_logs_upload",
                    "_copy_file",
                    "main",
                    "upload_files",
                    "get_files",
                    "upload_files",
                    "get_files",
                    "main"
                ]
            },
            {
                "name": "check_storage_on_upload",
                "calls": [
                    "check_storage_on_upload",
                    "check_storage_on_get",
                    "copy_logs_upload",
                    "_copy_file",
                    "main",
                    "upload_files",
                    "get_files",
                    "upload_files",
                    "get_files",
                    "main"
                ]
            },
            {
                "name": "check_storage_on_get",
                "calls": [
                    "check_storage_on_get",
                    "copy_logs_upload",
                    "_copy_file",
                    "main",
                    "upload_files",
                    "get_files",
                    "upload_files",
                    "get_files",
                    "main"
                ]
            },
            {
                "name": "copy_logs_upload",
                "calls": [
                    "copy_logs_upload",
                    "_copy_file",
                    "main",
                    "upload_files",
                    "get_files",
                    "upload_files",
                    "get_files",
                    "main"
                ]
            },
            {
                "name": "main",
                "calls": [
                    "main",
                    "upload_files",
                    "get_files",
                    "upload_files",
                    "get_files",
                    "main"
                ]
            }
        ],
        "parents": [],
        "calls": [],
        "directory": "/Users/aleksejivanov/PycharmProjects/synonym-soft/itb-synonym-core/src/filetransfer/ext/usb",
        "filename": "usb_runner.py"
    },
    "PasswordPushManager": {
        "name": "PasswordPushManager",
        "methods": [
            {
                "name": "get_objects_with_secret_id",
                "calls": [
                    "get_objects_with_secret_id",
                    "get_secret_id"
                ]
            },
            {
                "name": "get_secret_id",
                "calls": [
                    "get_secret_id"
                ]
            }
        ],
        "parents": [
            "BasePasswordManager"
        ],
        "calls": [],
        "directory": "/Users/aleksejivanov/PycharmProjects/synonym-soft/itb-synonym-core/src/filetransfer/ext/push",
        "filename": "password_push_manager.py"
    },
    "PushManager": {
        "name": "PushManager",
        "methods": [
            {
                "name": "is_exist",
                "calls": [
                    "is_exist",
                    "values",
                    "get_push",
                    "get",
                    "PushNotFoundError",
                    "add_push",
                    "PushConfigModel",
                    "dict",
                    "is_exist",
                    "AlreadyExistsError",
                    "add_push_creds",
                    "get_secret_mngr",
                    "from_storage_dir",
                    "get_config",
                    "service_save",
                    "parse_obj",
                    "error",
                    "get_push_creds",
                    "service_get_secret",
                    "delete_push",
                    "get_push",
                    "is_exist",
                    "Exception",
                    "pop",
                    "set_cron_chmod",
                    "get_config_object",
                    "chmod",
                    "chown",
                    "create_push_services",
                    "info",
                    "open",
                    "readlines",
                    "get_push",
                    "any",
                    "append",
                    "writelines",
                    "set_cron_chmod",
                    "delete_push_services",
                    "get_push",
                    "filter",
                    "set_cron_chmod",
                    "create_push_service",
                    "ArgumentParser",
                    "add_argument",
                    "parse_args",
                    "from_json_file",
                    "create_push_services"
                ]
            },
            {
                "name": "get_push",
                "calls": [
                    "get_push",
                    "add_push",
                    "is_exist",
                    "add_push_creds",
                    "get_push_creds",
                    "delete_push",
                    "get_push",
                    "is_exist",
                    "set_cron_chmod",
                    "create_push_services",
                    "get_push",
                    "set_cron_chmod",
                    "delete_push_services",
                    "get_push",
                    "set_cron_chmod",
                    "create_push_service",
                    "create_push_services"
                ]
            },
            {
                "name": "add_push",
                "calls": [
                    "add_push",
                    "is_exist",
                    "add_push_creds",
                    "get_push_creds",
                    "delete_push",
                    "get_push",
                    "is_exist",
                    "set_cron_chmod",
                    "create_push_services",
                    "get_push",
                    "set_cron_chmod",
                    "delete_push_services",
                    "get_push",
                    "set_cron_chmod",
                    "create_push_service",
                    "create_push_services"
                ]
            },
            {
                "name": "add_push_creds",
                "calls": [
                    "add_push_creds",
                    "get_push_creds",
                    "delete_push",
                    "get_push",
                    "is_exist",
                    "set_cron_chmod",
                    "create_push_services",
                    "get_push",
                    "set_cron_chmod",
                    "delete_push_services",
                    "get_push",
                    "set_cron_chmod",
                    "create_push_service",
                    "create_push_services"
                ]
            },
            {
                "name": "get_push_creds",
                "calls": [
                    "get_push_creds",
                    "delete_push",
                    "get_push",
                    "is_exist",
                    "set_cron_chmod",
                    "create_push_services",
                    "get_push",
                    "set_cron_chmod",
                    "delete_push_services",
                    "get_push",
                    "set_cron_chmod",
                    "create_push_service",
                    "create_push_services"
                ]
            },
            {
                "name": "delete_push",
                "calls": [
                    "delete_push",
                    "get_push",
                    "is_exist",
                    "set_cron_chmod",
                    "create_push_services",
                    "get_push",
                    "set_cron_chmod",
                    "delete_push_services",
                    "get_push",
                    "set_cron_chmod",
                    "create_push_service",
                    "create_push_services"
                ]
            },
            {
                "name": "set_cron_chmod",
                "calls": [
                    "set_cron_chmod",
                    "create_push_services",
                    "get_push",
                    "set_cron_chmod",
                    "delete_push_services",
                    "get_push",
                    "set_cron_chmod",
                    "create_push_service",
                    "create_push_services"
                ]
            },
            {
                "name": "create_push_services",
                "calls": [
                    "create_push_services",
                    "get_push",
                    "set_cron_chmod",
                    "delete_push_services",
                    "get_push",
                    "set_cron_chmod",
                    "create_push_service",
                    "create_push_services"
                ]
            },
            {
                "name": "delete_push_services",
                "calls": [
                    "delete_push_services",
                    "get_push",
                    "set_cron_chmod",
                    "create_push_service",
                    "create_push_services"
                ]
            },
            {
                "name": "create_push_service",
                "calls": [
                    "create_push_service",
                    "create_push_services"
                ]
            }
        ],
        "parents": [
            "BaseFtManager"
        ],
        "calls": [],
        "directory": "/Users/aleksejivanov/PycharmProjects/synonym-soft/itb-synonym-core/src/filetransfer/ext/push",
        "filename": "push_manager.py"
    },
    "PushShell": {
        "name": "PushShell",
        "methods": [
            {
                "name": "__init__",
                "calls": [
                    "__init__",
                    "super",
                    "__init__",
                    "add_commands",
                    "create_push_config",
                    "_set_cred_src_to_args",
                    "parse_obj",
                    "PushManager",
                    "add_push",
                    "info",
                    "format_validation_errors",
                    "error",
                    "_set_cred_src_to_args",
                    "get",
                    "_validate_secret",
                    "ValueError",
                    "isascii",
                    "set_push_config_secrets",
                    "_validate_secret",
                    "get_input_one_line",
                    "_validate_secret",
                    "_validate_secret",
                    "getpass",
                    "_validate_secret",
                    "Exception",
                    "get_push",
                    "add_push_creds",
                    "set_push_config_url",
                    "urlparse",
                    "geturl",
                    "show_push",
                    "show_all_push",
                    "enumerate",
                    "values",
                    "set_push_config_post_commands",
                    "input",
                    "strip",
                    "split",
                    "set_use_session_envelope",
                    "set_del_files",
                    "delete_push_config",
                    "delete_push",
                    "get_files_from_remote",
                    "run",
                    "as_posix"
                ]
            },
            {
                "name": "create_push_config",
                "calls": [
                    "create_push_config",
                    "_set_cred_src_to_args",
                    "_set_cred_src_to_args",
                    "_validate_secret",
                    "set_push_config_secrets",
                    "_validate_secret",
                    "_validate_secret",
                    "_validate_secret",
                    "_validate_secret",
                    "set_push_config_url",
                    "show_push",
                    "show_all_push",
                    "set_push_config_post_commands",
                    "set_use_session_envelope",
                    "set_del_files",
                    "delete_push_config",
                    "get_files_from_remote"
                ]
            },
            {
                "name": "_set_cred_src_to_args",
                "calls": [
                    "_set_cred_src_to_args",
                    "_validate_secret",
                    "set_push_config_secrets",
                    "_validate_secret",
                    "_validate_secret",
                    "_validate_secret",
                    "_validate_secret",
                    "set_push_config_url",
                    "show_push",
                    "show_all_push",
                    "set_push_config_post_commands",
                    "set_use_session_envelope",
                    "set_del_files",
                    "delete_push_config",
                    "get_files_from_remote"
                ]
            },
            {
                "name": "_validate_secret",
                "calls": [
                    "_validate_secret",
                    "set_push_config_secrets",
                    "_validate_secret",
                    "_validate_secret",
                    "_validate_secret",
                    "_validate_secret",
                    "set_push_config_url",
                    "show_push",
                    "show_all_push",
                    "set_push_config_post_commands",
                    "set_use_session_envelope",
                    "set_del_files",
                    "delete_push_config",
                    "get_files_from_remote"
                ]
            },
            {
                "name": "set_push_config_secrets",
                "calls": [
                    "set_push_config_secrets",
                    "_validate_secret",
                    "_validate_secret",
                    "_validate_secret",
                    "_validate_secret",
                    "set_push_config_url",
                    "show_push",
                    "show_all_push",
                    "set_push_config_post_commands",
                    "set_use_session_envelope",
                    "set_del_files",
                    "delete_push_config",
                    "get_files_from_remote"
                ]
            },
            {
                "name": "set_push_config_url",
                "calls": [
                    "set_push_config_url",
                    "show_push",
                    "show_all_push",
                    "set_push_config_post_commands",
                    "set_use_session_envelope",
                    "set_del_files",
                    "delete_push_config",
                    "get_files_from_remote"
                ]
            },
            {
                "name": "show_push",
                "calls": [
                    "show_push",
                    "show_all_push",
                    "set_push_config_post_commands",
                    "set_use_session_envelope",
                    "set_del_files",
                    "delete_push_config",
                    "get_files_from_remote"
                ]
            },
            {
                "name": "show_all_push",
                "calls": [
                    "show_all_push",
                    "set_push_config_post_commands",
                    "set_use_session_envelope",
                    "set_del_files",
                    "delete_push_config",
                    "get_files_from_remote"
                ]
            },
            {
                "name": "set_push_config_post_commands",
                "calls": [
                    "set_push_config_post_commands",
                    "set_use_session_envelope",
                    "set_del_files",
                    "delete_push_config",
                    "get_files_from_remote"
                ]
            },
            {
                "name": "set_use_session_envelope",
                "calls": [
                    "set_use_session_envelope",
                    "set_del_files",
                    "delete_push_config",
                    "get_files_from_remote"
                ]
            },
            {
                "name": "set_del_files",
                "calls": [
                    "set_del_files",
                    "delete_push_config",
                    "get_files_from_remote"
                ]
            },
            {
                "name": "delete_push_config",
                "calls": [
                    "delete_push_config",
                    "get_files_from_remote"
                ]
            },
            {
                "name": "get_files_from_remote",
                "calls": [
                    "get_files_from_remote"
                ]
            }
        ],
        "parents": [
            "CommonShell",
            "InputMixin"
        ],
        "calls": [],
        "directory": "/Users/aleksejivanov/PycharmProjects/synonym-soft/itb-synonym-core/src/filetransfer/ext/push",
        "filename": "shell_commands.py"
    },
    "PushScheduler": {
        "name": "PushScheduler",
        "methods": [
            {
                "name": "__init__",
                "calls": [
                    "__init__",
                    "_get_dir_to_save",
                    "items",
                    "info",
                    "keys",
                    "exists",
                    "get_files_from_server",
                    "IncorrectModeError",
                    "Storage",
                    "get_status",
                    "MemoryError",
                    "get_client",
                    "_get_dir_to_save",
                    "error",
                    "get_push_creds",
                    "connect",
                    "is_connected",
                    "ConnectionError",
                    "get_session",
                    "run",
                    "as_posix",
                    "main",
                    "ArgumentParser",
                    "add_argument",
                    "parse_args",
                    "Exception",
                    "get_config_object",
                    "get_or_create_lock_dir",
                    "LockFile",
                    "PushManager",
                    "get_push",
                    "get_files_from_server",
                    "exit",
                    "main"
                ]
            },
            {
                "name": "_get_dir_to_save",
                "calls": [
                    "_get_dir_to_save",
                    "get_files_from_server",
                    "_get_dir_to_save",
                    "main",
                    "get_files_from_server",
                    "main"
                ]
            },
            {
                "name": "get_files_from_server",
                "calls": [
                    "get_files_from_server",
                    "_get_dir_to_save",
                    "main",
                    "get_files_from_server",
                    "main"
                ]
            },
            {
                "name": "main",
                "calls": [
                    "main",
                    "get_files_from_server",
                    "main"
                ]
            }
        ],
        "parents": [],
        "calls": [],
        "directory": "/Users/aleksejivanov/PycharmProjects/synonym-soft/itb-synonym-core/src/filetransfer/ext/push",
        "filename": "push_scheduler.py"
    },
    "BaseCefModel": {
        "name": "BaseCefModel",
        "methods": [],
        "parents": [],
        "calls": [],
        "directory": "python_and_other_modules",
        "filename": "path unknown"
    },
    "CefBase": {
        "name": "CefBase",
        "methods": [],
        "parents": [],
        "calls": [],
        "directory": "python_and_other_modules",
        "filename": "path unknown"
    },
    "ConnectionMixin": {
        "name": "ConnectionMixin",
        "methods": [],
        "parents": [],
        "calls": [],
        "directory": "python_and_other_modules",
        "filename": "path unknown"
    },
    "CommonShell": {
        "name": "CommonShell",
        "methods": [],
        "parents": [],
        "calls": [],
        "directory": "python_and_other_modules",
        "filename": "path unknown"
    },
    "object": {
        "name": "object",
        "methods": [],
        "parents": [],
        "calls": [],
        "directory": "python_and_other_modules",
        "filename": "path unknown"
    },
    "InputMixin": {
        "name": "InputMixin",
        "methods": [],
        "parents": [],
        "calls": [],
        "directory": "python_and_other_modules",
        "filename": "path unknown"
    },
    "BasePasswordManager": {
        "name": "BasePasswordManager",
        "methods": [],
        "parents": [],
        "calls": [],
        "directory": "python_and_other_modules",
        "filename": "path unknown"
    },
    "ABC": {
        "name": "ABC",
        "methods": [],
        "parents": [],
        "calls": [],
        "directory": "python_and_other_modules",
        "filename": "path unknown"
    }
}